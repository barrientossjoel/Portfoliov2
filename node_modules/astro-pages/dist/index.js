import{existsSync as j}from"node:fs";import{dirname as A,extname as d,isAbsolute as v,resolve as O}from"node:path";import{fileURLToPath as x}from"node:url";import{AstroError as l}from"astro/errors";import D from"fast-glob";var u="**.{astro,ts,js}";function m(e){let{dir:r,cwd:n,glob:t=u,pattern:i,log:o,config:a,logger:p}=e,y=x(a.srcDir.toString());n=w(e,"cwd",y,n),r=w(e,"dir",n,r),Array.isArray(t)&&t.length<=0&&(t=u);let I=D.sync([t,"!**/_*","!**/_**/*","!**/content/config.ts","!**/node_modules","!**/*.(d|wasm).(ts|js)"].flat(),{cwd:r,absolute:!0}),c={};for(let g of I){let s=g.slice(r.length,-d(g).length).replace(/(\\|\/)index$/,"")||"/";c[s]=g}function b(g){if(r===O(y,"pages"))throw new l("Failed to inject pages! Directory cannot point to Astro's 'pages' directory",r);o&&p.info("Adding pages: "+r);for(let[s,f]of Object.entries(c)){if(i&&(s=i({dir:r,cwd:n,entrypoint:f,ext:d(f),pattern:s})),!s){o==="verbose"&&p.warn(`Invalid pattern, skipping entrypoint: ${f}`);continue}o==="verbose"&&p.info("Injecting pattern: "+s),g({entryPoint:f,entrypoint:f,pattern:s})}}return{pages:c,injectPages:b}}function w(e,r,n,t){let{log:i,logger:o}=e;if(r==="dir"&&(!t||typeof t!="string"))throw new l(`'${r}' path is invalid!`,t);if(t||(t=n),t.startsWith("file:/")&&(t=x(t)),v(t)||(t=O(n,t)),d(t)&&(i==="verbose"&&o.warn(`'${r}' is a file, using file's directory instead`),t=A(t)),!j(t))throw new l(`'${r}' path does not exist!`,t);return t}function P(...e){return{name:"astro-pages",hooks:{"astro:config:setup":({config:r,logger:n,injectRoute:t})=>{for(let i of e){let o={config:r,logger:n};if(typeof i=="string"&&(i={dir:i}),!i||!i?.dir||typeof i?.dir!="string"){n.warn(`Skipping invalid option "${JSON.stringify(i,null,4)}"`);continue}Object.assign(o,i);let{injectPages:a}=m(o);a(t)}}}}}var L=P;export{m as addPageDir,L as default};
//# sourceMappingURL=index.js.map