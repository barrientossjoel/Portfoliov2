{"version":3,"sources":["../../src/sitemap/integration.ts","../../src/sitemap/utils.ts","../../src/sitemap/generate-sitemap.ts","../../src/sitemap/options.ts","../../src/sitemap/route-config.ts"],"sourcesContent":["import { relative } from \"node:path\";\nimport { fileURLToPath } from \"node:url\";\nimport routeConfigPlugin from \"@inox-tools/aik-route-config\";\nimport type { AstroConfig, InjectedRoute, RouteData } from \"astro\";\nimport {\n\tdefineIntegration,\n\thasIntegration,\n\twithPlugins,\n} from \"astro-integration-kit\";\nimport { AstroError } from \"astro/errors\";\nimport { z } from \"astro/zod\";\nimport { simpleSitemapAndIndex } from \"sitemap\";\nimport { withoutTrailingSlash } from \"ufo\";\nimport { normalizePath } from \"vite\";\nimport type { Route as InternalRoute } from \"../types.js\";\nimport { generateSitemap } from \"./generate-sitemap.js\";\nimport { optionsSchema } from \"./options.js\";\nimport { type CallbackSchema, callbackSchema } from \"./route-config.js\";\nimport {\n\tcreateImpossibleError,\n\tformatConfigErrorMessage,\n\tgetPathnameFromRouteData,\n\thandleTrailingSlash,\n\tisStatusCodePage,\n\tnormalizeDynamicParams,\n} from \"./utils.js\";\n\nconst OUTFILE = \"sitemap-index.xml\";\n\n// strictest forces us to do weird things\ntype _RouteRoute = Omit<InternalRoute, \"injectedRoute\"> & {\n\tinjectedRoute: Omit<InjectedRoute, \"prerender\"> & {\n\t\tprerender?: boolean | undefined;\n\t};\n};\n\nexport type Route = {\n\tpages: Array<string>;\n\troute: _RouteRoute | undefined;\n\trouteData: RouteData;\n\tsitemapOptions: Array<Exclude<CallbackSchema, false>>;\n\tinclude: boolean;\n};\n\nexport const integration = defineIntegration({\n\tname: \"astro-i18n/sitemap\",\n\toptionsSchema,\n\tsetup({ options, name }) {\n\t\tconst initialRoutes: Array<Route> = options.internal.routes.map(\n\t\t\t(route) => ({\n\t\t\t\tpages: [],\n\t\t\t\troute,\n\t\t\t\trouteData: undefined as unknown as RouteData,\n\t\t\t\tsitemapOptions: [],\n\t\t\t\tinclude: true,\n\t\t\t}),\n\t\t);\n\n\t\tlet config: AstroConfig;\n\n\t\treturn withPlugins({\n\t\t\tname,\n\t\t\tplugins: [routeConfigPlugin],\n\t\t\thooks: {\n\t\t\t\t\"astro:config:setup\": ({ defineRouteConfig, ...params }) => {\n\t\t\t\t\tconst { logger } = params;\n\n\t\t\t\t\tif (hasIntegration(params, { name: \"@astrojs/sitemap\" })) {\n\t\t\t\t\t\tthrow new AstroError(\n\t\t\t\t\t\t\t\"Cannot use both `@astrolicious/i18n` sitemap and `@astrojs/sitemap` integrations at the same time.\",\n\t\t\t\t\t\t\t\"Remove the `@astrojs/sitemap` integration from your project.\",\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tconfig = params.config;\n\n\t\t\t\t\tdefineRouteConfig({\n\t\t\t\t\t\timportName: \"i18n:astro/sitemap\",\n\t\t\t\t\t\tcallbackHandler: ({ routeData }, callback) => {\n\t\t\t\t\t\t\tconst response = callbackSchema.safeParse(callback);\n\t\t\t\t\t\t\tif (!response.success) {\n\t\t\t\t\t\t\t\tthrow new AstroError(\n\t\t\t\t\t\t\t\t\tformatConfigErrorMessage(response.error),\n\t\t\t\t\t\t\t\t\t\"Check your usage of `astro:i18n/sitemap`\",\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfor (const r of routeData) {\n\t\t\t\t\t\t\t\tconst route = initialRoutes.find(\n\t\t\t\t\t\t\t\t\t(e) =>\n\t\t\t\t\t\t\t\t\t\te.route?.injectedRoute.pattern ===\n\t\t\t\t\t\t\t\t\t\tgetPathnameFromRouteData(r),\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tif (!route) {\n\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\troute.routeData = r;\n\t\t\t\t\t\t\t\troute.include = response.data !== false;\n\t\t\t\t\t\t\t\tif (response.data !== false) {\n\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\tresponse.data.changefreq ||\n\t\t\t\t\t\t\t\t\t\tresponse.data.lastmod ||\n\t\t\t\t\t\t\t\t\t\tresponse.data.priority\n\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\tlogger.warn(\n\t\t\t\t\t\t\t\t\t\t\t`Setting \\`changefreq\\`, \\`lastmod\\` or \\`priority\\` on a route basis is not implemented yet (eg. on \"${r.component}\")`,\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\troute.sitemapOptions.push(response.data);\n\t\t\t\t\t\t\t\t\tif (route.route) {\n\t\t\t\t\t\t\t\t\t\tconst { locale, injectedRoute } = route.route;\n\t\t\t\t\t\t\t\t\t\tconst params = normalizeDynamicParams(\n\t\t\t\t\t\t\t\t\t\t\tresponse.data.dynamicParams,\n\t\t\t\t\t\t\t\t\t\t)?.find((e) => e.locale === locale);\n\t\t\t\t\t\t\t\t\t\tif (params) {\n\t\t\t\t\t\t\t\t\t\t\tlet page = injectedRoute.pattern;\n\t\t\t\t\t\t\t\t\t\t\tfor (const [key, value] of Object.entries(\n\t\t\t\t\t\t\t\t\t\t\t\tparams.params,\n\t\t\t\t\t\t\t\t\t\t\t)) {\n\t\t\t\t\t\t\t\t\t\t\t\tif (value) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tpage = page.replace(`[${key}]`, value);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\troute.pages.push(page);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\t\"astro:build:done\": async (params) => {\n\t\t\t\t\tconst { logger } = params;\n\n\t\t\t\t\tfor (const route of initialRoutes) {\n\t\t\t\t\t\tif (route.pages.length === 0 && route.route) {\n\t\t\t\t\t\t\troute.pages.push(route.route.injectedRoute.pattern);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (const r of initialRoutes.filter((e) => !e.routeData)) {\n\t\t\t\t\t\tconst routeData = params.routes.find(\n\t\t\t\t\t\t\t(e) =>\n\t\t\t\t\t\t\t\twithoutTrailingSlash(r.route?.injectedRoute.pattern) ===\n\t\t\t\t\t\t\t\tgetPathnameFromRouteData(e),\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (!routeData) {\n\t\t\t\t\t\t\tthrow createImpossibleError(\n\t\t\t\t\t\t\t\t\"This situation should never occur (a corresponding routeData should always be found)\",\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tr.routeData = routeData;\n\t\t\t\t\t\tr.include = routeData.type === \"page\";\n\t\t\t\t\t}\n\n\t\t\t\t\tconst _routes = [\n\t\t\t\t\t\t...initialRoutes,\n\t\t\t\t\t\t...params.routes\n\t\t\t\t\t\t\t.filter(\n\t\t\t\t\t\t\t\t(e) =>\n\t\t\t\t\t\t\t\t\t!initialRoutes\n\t\t\t\t\t\t\t\t\t\t.map((e) => getPathnameFromRouteData(e.routeData))\n\t\t\t\t\t\t\t\t\t\t.includes(getPathnameFromRouteData(e)),\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.map((routeData) => {\n\t\t\t\t\t\t\t\tconst route: Route = {\n\t\t\t\t\t\t\t\t\tinclude: true,\n\t\t\t\t\t\t\t\t\trouteData,\n\t\t\t\t\t\t\t\t\tpages: [],\n\t\t\t\t\t\t\t\t\troute: undefined,\n\t\t\t\t\t\t\t\t\tsitemapOptions: [],\n\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\treturn route;\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t];\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!config.site) {\n\t\t\t\t\t\t\tlogger.warn(\n\t\t\t\t\t\t\t\t\"The Sitemap integration requires the `site` astro.config option. Skipping.\",\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst { customPages, entryLimit } = options;\n\n\t\t\t\t\t\tif (!config.site) {\n\t\t\t\t\t\t\tlogger.warn(\n\t\t\t\t\t\t\t\t\"The `site` astro.config option is required. Skipping.\",\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst finalSiteUrl = new URL(config.base, config.site);\n\n\t\t\t\t\t\tlet pageUrls = params.pages\n\t\t\t\t\t\t\t.filter((p) => !isStatusCodePage(p.pathname))\n\t\t\t\t\t\t\t.map((p) => {\n\t\t\t\t\t\t\t\tif (p.pathname !== \"\" && !finalSiteUrl.pathname.endsWith(\"/\"))\n\t\t\t\t\t\t\t\t\tfinalSiteUrl.pathname += \"/\";\n\t\t\t\t\t\t\t\tif (p.pathname.startsWith(\"/\"))\n\t\t\t\t\t\t\t\t\tp.pathname = p.pathname.slice(1);\n\t\t\t\t\t\t\t\tconst fullPath = finalSiteUrl.pathname + p.pathname;\n\t\t\t\t\t\t\t\treturn new URL(fullPath, finalSiteUrl).href;\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\tconst routeUrls = _routes.reduce<string[]>((urls, route) => {\n\t\t\t\t\t\t\tconst r = route.routeData;\n\t\t\t\t\t\t\tif (!r) {\n\t\t\t\t\t\t\t\treturn urls;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// Only expose pages, not endpoints or redirects\n\t\t\t\t\t\t\tif (r.type !== \"page\") return urls;\n\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * Dynamic URLs have entries with `undefined` pathnames\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tif (r.pathname) {\n\t\t\t\t\t\t\t\tif (isStatusCodePage(r.pathname ?? r.route)) return urls;\n\n\t\t\t\t\t\t\t\t// `finalSiteUrl` may end with a trailing slash\n\t\t\t\t\t\t\t\t// or not because of base paths.\n\t\t\t\t\t\t\t\tlet fullPath = finalSiteUrl.pathname;\n\t\t\t\t\t\t\t\tif (fullPath.endsWith(\"/\"))\n\t\t\t\t\t\t\t\t\tfullPath += r.generate(r.pathname).substring(1);\n\t\t\t\t\t\t\t\telse fullPath += r.generate(r.pathname);\n\n\t\t\t\t\t\t\t\tconst newUrl = new URL(fullPath, finalSiteUrl).href;\n\n\t\t\t\t\t\t\t\turls.push(handleTrailingSlash(newUrl, config));\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn urls;\n\t\t\t\t\t\t}, []);\n\n\t\t\t\t\t\tpageUrls = Array.from(\n\t\t\t\t\t\t\tnew Set([...pageUrls, ...routeUrls, ...(customPages ?? [])]),\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tpageUrls = pageUrls.filter((page) => {\n\t\t\t\t\t\t\tconst route = normalizePath(\n\t\t\t\t\t\t\t\t`/${relative(config.base, new URL(page).pathname)}`,\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tconst excludedRoutes = _routes.filter((e) => !e.include);\n\t\t\t\t\t\t\tfor (const { routeData } of excludedRoutes) {\n\t\t\t\t\t\t\t\t// biome-ignore lint/style/noNonNullAssertion: <explanation>\n\t\t\t\t\t\t\t\tif (routeData!.pattern.test(route)) {\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tif (pageUrls.length === 0) {\n\t\t\t\t\t\t\tlogger.warn(`No pages found!\\n\\`${OUTFILE}\\` not created.`);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (const route of _routes.filter((e) => e.include)) {\n\t\t\t\t\t\t\troute.pages = route.pages.map((page) =>\n\t\t\t\t\t\t\t\tpage.startsWith(\"/\")\n\t\t\t\t\t\t\t\t\t? handleTrailingSlash(\n\t\t\t\t\t\t\t\t\t\t\tnew URL(page, finalSiteUrl).href,\n\t\t\t\t\t\t\t\t\t\t\tconfig,\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t: page,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst urlData = generateSitemap(\n\t\t\t\t\t\t\t_routes.filter((e) => e.include),\n\t\t\t\t\t\t\tfinalSiteUrl.href,\n\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\tconfig,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tconst destDir = fileURLToPath(params.dir);\n\t\t\t\t\t\tawait simpleSitemapAndIndex({\n\t\t\t\t\t\t\thostname: finalSiteUrl.href,\n\t\t\t\t\t\t\tdestinationDir: destDir,\n\t\t\t\t\t\t\tsourceData: urlData,\n\t\t\t\t\t\t\tlimit: entryLimit,\n\t\t\t\t\t\t\tgzip: false,\n\t\t\t\t\t\t});\n\t\t\t\t\t\tlogger.info(\n\t\t\t\t\t\t\t`\\`${OUTFILE}\\` created at \\`${relative(\n\t\t\t\t\t\t\t\tprocess.cwd(),\n\t\t\t\t\t\t\t\tdestDir,\n\t\t\t\t\t\t\t)}\\``,\n\t\t\t\t\t\t);\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\tif (err instanceof z.ZodError) {\n\t\t\t\t\t\t\tlogger.warn(formatConfigErrorMessage(err));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow err;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t},\n});\n","import type { AstroConfig, RouteData } from \"astro\";\nimport { AstroError } from \"astro/errors\";\nimport type { ZodError } from \"astro/zod\";\nimport type { Route } from \"./integration.js\";\n\nconst STATUS_CODE_PAGES = new Set([\"404\", \"500\"]);\n\nexport const isStatusCodePage = (_pathname: string): boolean => {\n\tlet pathname = _pathname;\n\tif (pathname.endsWith(\"/\")) {\n\t\tpathname = pathname.slice(0, -1);\n\t}\n\tconst end = pathname.split(\"/\").pop() ?? \"\";\n\treturn STATUS_CODE_PAGES.has(end);\n};\n\nexport const formatConfigErrorMessage = (err: ZodError) => {\n\tconst errorList = err.issues.map(\n\t\t(issue) => ` ${issue.path.join(\".\")}  ${`${issue.message}.`}`,\n\t);\n\treturn errorList.join(\"\\n\");\n};\n\nexport const createImpossibleError = (message: string) =>\n\tnew AstroError(\n\t\tmessage,\n\t\t\"Please open an issue on GitHub at https://github.com/astrolicious/i18n/issues\",\n\t);\n\nexport const getPathnameFromRouteData = ({ segments }: RouteData) => {\n\tconst pathname = segments\n\t\t.map((segment) => {\n\t\t\treturn segment\n\t\t\t\t.map((rp) => (rp.dynamic ? `[${rp.content}]` : rp.content))\n\t\t\t\t.join(\"\");\n\t\t})\n\t\t.join(\"/\");\n\n\treturn `/${pathname}`;\n};\n\nexport const normalizeDynamicParams = (\n\t_params: Route[\"sitemapOptions\"][number][\"dynamicParams\"],\n) => {\n\tif (!_params) {\n\t\treturn [];\n\t}\n\n\tif (Array.isArray(_params)) {\n\t\treturn _params;\n\t}\n\n\treturn Object.entries(_params).map(([locale, params]) => ({\n\t\tlocale,\n\t\tparams,\n\t}));\n};\n\nexport const handleTrailingSlash = (url: string, config: AstroConfig) => {\n\tif (config.trailingSlash === \"never\") {\n\t\treturn url;\n\t}\n\tif (config.build.format === \"directory\" && !url.endsWith(\"/\")) {\n\t\treturn `${url}/`;\n\t}\n\treturn url;\n};\n","import type { AstroConfig } from \"astro\";\nimport type { LinkItem, SitemapItemLoose } from \"sitemap\";\nimport type { Route } from \"./integration.js\";\nimport type { SitemapOptions } from \"./options.js\";\nimport {\n\tcreateImpossibleError,\n\thandleTrailingSlash,\n\tnormalizeDynamicParams,\n} from \"./utils.js\";\n\ntype NoUndefinedField<T> = {\n\t[P in keyof T]-?: NonNullable<T[P]>;\n};\n\n/** Construct sitemap.xml given a set of URLs */\nexport function generateSitemap(\n\troutes: Array<Route>,\n\t_finalSiteUrl: string,\n\topts: SitemapOptions,\n\tconfig: AstroConfig,\n) {\n\tconst { changefreq, priority, lastmod: lastmodSrc } = opts;\n\tconst lastmod = lastmodSrc?.toISOString();\n\n\tconst getLinksFromRoute = (route: NoUndefinedField<Route>, page: string) => {\n\t\tif (!route.route) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst links: Array<LinkItem> = [];\n\n\t\tconst equivalentRoutes = routes.filter(\n\t\t\t(e) =>\n\t\t\t\te.route &&\n\t\t\t\te.route.pattern === route.route.pattern &&\n\t\t\t\te.route.locale !== route.route.locale,\n\t\t) as Array<NoUndefinedField<Route>>;\n\n\t\tlinks.push({\n\t\t\tlang: route.route.locale,\n\t\t\turl: page,\n\t\t});\n\n\t\t// Handle static links\n\t\tif (route.routeData.params.length === 0) {\n\t\t\tfor (const equivalentRoute of equivalentRoutes) {\n\t\t\t\tlinks.push({\n\t\t\t\t\tlang: equivalentRoute.route.locale,\n\t\t\t\t\turl: handleTrailingSlash(\n\t\t\t\t\t\t`${new URL(page).origin}${\n\t\t\t\t\t\t\tequivalentRoute.route.injectedRoute.pattern\n\t\t\t\t\t\t}`,\n\t\t\t\t\t\tconfig,\n\t\t\t\t\t),\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn [...links].sort((a, b) =>\n\t\t\t\ta.lang.localeCompare(b.lang, \"en\", { numeric: true }),\n\t\t\t);\n\t\t}\n\n\t\tconst index = route.pages.indexOf(page);\n\t\tconst sitemapOptions = route.sitemapOptions.filter(\n\t\t\t(e) =>\n\t\t\t\te.dynamicParams &&\n\t\t\t\t(Array.isArray(e.dynamicParams)\n\t\t\t\t\t? e.dynamicParams\n\t\t\t\t\t: Object.entries(e.dynamicParams)\n\t\t\t\t).length > 0,\n\t\t)[index];\n\t\tif (!sitemapOptions || !sitemapOptions.dynamicParams) {\n\t\t\treturn [];\n\t\t}\n\n\t\tfor (const equivalentRoute of equivalentRoutes) {\n\t\t\tconst options = normalizeDynamicParams(sitemapOptions.dynamicParams).find(\n\t\t\t\t(e) => e.locale === equivalentRoute.route.locale,\n\t\t\t);\n\n\t\t\tif (!options) {\n\t\t\t\t// A dynamic route is not required to always have an equivalent in another language eg.\n\t\t\t\t// en: /blog/a\n\t\t\t\t// fr: /fr/le-blog/b\n\t\t\t\t// it: none\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet newPage = equivalentRoute.route.injectedRoute.pattern;\n\t\t\tfor (const [key, value] of Object.entries(options.params)) {\n\t\t\t\tif (!value) {\n\t\t\t\t\tthrow createImpossibleError(\n\t\t\t\t\t\t\"This situation should never occur (value is not set)\",\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tnewPage = newPage.replace(`[${key}]`, value);\n\t\t\t}\n\t\t\tnewPage = handleTrailingSlash(\n\t\t\t\t`${new URL(page).origin}${newPage}`,\n\t\t\t\tconfig,\n\t\t\t);\n\t\t\tlinks.push({\n\t\t\t\tlang: equivalentRoute.route.locale,\n\t\t\t\turl: newPage,\n\t\t\t});\n\t\t}\n\t\treturn [...links].sort((a, b) =>\n\t\t\ta.lang.localeCompare(b.lang, \"en\", { numeric: true }),\n\t\t);\n\t};\n\n\tconst urlData: Array<SitemapItemLoose> = [];\n\tfor (const route of routes) {\n\t\tfor (const page of route.pages) {\n\t\t\tconst links: Array<LinkItem> = [];\n\t\t\tif (route.route) {\n\t\t\t\tconst _links = getLinksFromRoute(\n\t\t\t\t\t// Required because TS\n\t\t\t\t\t{\n\t\t\t\t\t\t...route,\n\t\t\t\t\t\troute: route.route,\n\t\t\t\t\t},\n\t\t\t\t\tpage,\n\t\t\t\t);\n\t\t\t\tlinks.push(..._links);\n\t\t\t}\n\n\t\t\tconst obj: SitemapItemLoose = {\n\t\t\t\turl: page,\n\t\t\t\tlinks,\n\t\t\t};\n\n\t\t\t// TODO: get from sitemap options first\n\t\t\tif (changefreq) {\n\t\t\t\tObject.assign(obj, { changefreq });\n\t\t\t}\n\t\t\tif (lastmod) {\n\t\t\t\tObject.assign(obj, { lastmod });\n\t\t\t}\n\t\t\tif (priority) {\n\t\t\t\tObject.assign(obj, { priority });\n\t\t\t}\n\n\t\t\turlData.push(obj);\n\t\t}\n\t}\n\n\treturn [...urlData].sort((a, b) =>\n\t\ta.url.localeCompare(b.url, \"en\", { numeric: true }),\n\t);\n}\n","import { z } from \"astro/zod\";\nimport { EnumChangefreq } from \"sitemap\";\n\nexport const publicOptionsSchema = z.object({\n\tcustomPages: z.array(z.string().url()).optional(),\n\tentryLimit: z.number().min(1).optional().default(45000),\n\tchangefreq: z.nativeEnum(EnumChangefreq).optional(),\n\tlastmod: z.date().optional(),\n\tpriority: z.number().min(0).max(1).optional(),\n});\nexport const privateOptionsSchema = z.object({\n\tinternal: z.object({\n\t\ti18n: z.object({\n\t\t\tdefaultLocale: z.string(),\n\t\t\tlocales: z.array(z.string()),\n\t\t}),\n\t\troutes: z.array(\n\t\t\tz.object({\n\t\t\t\tlocale: z.string(),\n\t\t\t\tparams: z.array(z.string()),\n\t\t\t\tpattern: z.string(),\n\t\t\t\tinjectedRoute: z.object({\n\t\t\t\t\tpattern: z.string(),\n\t\t\t\t\tentrypoint: z.string(),\n\t\t\t\t\tprerender: z.boolean().optional(),\n\t\t\t\t}),\n\t\t\t}),\n\t\t),\n\t}),\n});\n\nexport const optionsSchema = publicOptionsSchema.and(privateOptionsSchema);\n\nexport type SitemapOptions = z.infer<typeof optionsSchema>;\n","import { z } from \"astro/zod\";\nimport { publicOptionsSchema } from \"./options.js\";\n\nexport const callbackSchema = z\n\t.union([\n\t\tz.literal(false),\n\t\tz\n\t\t\t.object({\n\t\t\t\tdynamicParams: z\n\t\t\t\t\t.union([\n\t\t\t\t\t\tz.record(z.record(z.string().optional())),\n\t\t\t\t\t\tz.array(\n\t\t\t\t\t\t\tz.object({\n\t\t\t\t\t\t\t\tlocale: z.string(),\n\t\t\t\t\t\t\t\tparams: z.record(z.string()),\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t),\n\t\t\t\t\t])\n\t\t\t\t\t.optional(),\n\t\t\t})\n\t\t\t.and(\n\t\t\t\tpublicOptionsSchema\n\t\t\t\t\t.pick({\n\t\t\t\t\t\tlastmod: true,\n\t\t\t\t\t\tpriority: true,\n\t\t\t\t\t\tchangefreq: true,\n\t\t\t\t\t})\n\t\t\t\t\t.partial(),\n\t\t\t),\n\t])\n\t.optional()\n\t.default({});\n\nexport type CallbackSchema = z.infer<typeof callbackSchema>;\n"],"mappings":"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","names":["relative","fileURLToPath","routeConfigPlugin","defineIntegration","hasIntegration","withPlugins","AstroError","z","simpleSitemapAndIndex","withoutTrailingSlash","normalizePath","AstroError","STATUS_CODE_PAGES","isStatusCodePage","_pathname","pathname","end","formatConfigErrorMessage","err","issue","createImpossibleError","message","getPathnameFromRouteData","segments","segment","rp","normalizeDynamicParams","_params","locale","params","handleTrailingSlash","url","config","generateSitemap","routes","_finalSiteUrl","opts","config","changefreq","priority","lastmodSrc","lastmod","getLinksFromRoute","route","page","links","equivalentRoutes","e","equivalentRoute","handleTrailingSlash","a","b","index","sitemapOptions","options","normalizeDynamicParams","newPage","key","value","createImpossibleError","urlData","_links","obj","z","EnumChangefreq","publicOptionsSchema","privateOptionsSchema","optionsSchema","z","callbackSchema","z","publicOptionsSchema","OUTFILE","integration","defineIntegration","optionsSchema","options","name","initialRoutes","route","config","withPlugins","routeConfigPlugin","defineRouteConfig","params","logger","hasIntegration","AstroError","routeData","callback","response","callbackSchema","formatConfigErrorMessage","r","e","getPathnameFromRouteData","locale","injectedRoute","normalizeDynamicParams","page","key","value","withoutTrailingSlash","createImpossibleError","_routes","customPages","entryLimit","finalSiteUrl","pageUrls","p","isStatusCodePage","fullPath","routeUrls","urls","newUrl","handleTrailingSlash","normalizePath","relative","excludedRoutes","urlData","generateSitemap","destDir","fileURLToPath","simpleSitemapAndIndex","err","z"]}