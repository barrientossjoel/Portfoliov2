import{existsSync as j}from"node:fs";import{dirname as A,extname as d,isAbsolute as I,resolve as w}from"node:path";import{fileURLToPath as O}from"node:url";import{AstroError as l}from"astro/errors";import v from"fast-glob";var u="**.{astro,ts,js}";function P(e){let{dir:r,cwd:i,glob:t=u,pattern:n,log:o,config:a,logger:c}=e,m=O(a.srcDir.toString());i=y(e,"cwd",m,i),r=y(e,"dir",i,r),Array.isArray(t)&&t.length<=0&&(t=u);let x=v.sync([t,"!**/_*","!**/_**/*","!**/content/config.ts","!**/node_modules","!**/*.(d|wasm).(ts|js)"].flat(),{cwd:r,absolute:!0}),p={};for(let g of x){let s=g.slice(r.length,-d(g).length).replace(/(\\|\/)index$/,"")||"/";p[s]=g}function b(g){if(r===w(m,"pages"))throw new l("Failed to inject pages! Directory cannot point to Astro's 'pages' directory",r);o&&c.info("Adding pages: "+r);for(let[s,f]of Object.entries(p)){if(n&&(s=n({dir:r,cwd:i,entrypoint:f,ext:d(f),pattern:s})),!s){o==="verbose"&&c.warn(`Invalid pattern, skipping entrypoint: ${f}`);continue}o==="verbose"&&c.info("Injecting pattern: "+s),g({entryPoint:f,entrypoint:f,pattern:s})}}return{pages:p,injectPages:b}}function y(e,r,i,t){let{log:n,logger:o}=e;if(r==="dir"&&(!t||typeof t!="string"))throw new l(`'${r}' path is invalid!`,t);if(t||(t=i),t.startsWith("file:/")&&(t=O(t)),I(t)||(t=w(i,t)),d(t)&&(n==="verbose"&&o.warn(`'${r}' is a file, using file's directory instead`),t=A(t)),!j(t))throw new l(`'${r}' path does not exist!`,t);return t}function R(...e){return{name:"astro-pages",hooks:{"astro:config:setup":({config:r,logger:i,injectRoute:t})=>{for(let n of e){let o={config:r,logger:i};if(typeof n=="string"&&(n={dir:n}),!n||!n?.dir||typeof n?.dir!="string"){i.warn(`Skipping invalid option "${JSON.stringify(n,null,4)}"`);continue}Object.assign(o,n);let{injectPages:a}=P(o);a(t)}}}}}export{R as default};
//# sourceMappingURL=integration.js.map