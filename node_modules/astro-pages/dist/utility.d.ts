import { HookParameters } from 'astro';

type Prettify<T> = {
    [K in keyof T]: T[K];
} & {};
type Option = Prettify<{
    log?: "verbose" | "minimal" | boolean | null | undefined;
    cwd?: string;
    dir: string;
    glob?: string | string[];
    pattern?: (context: {
        cwd: string;
        dir: string;
        entrypoint: string;
        ext: string;
        pattern: string;
    }) => string;
}>;
type IntegrationOption = Prettify<Option & {
    config: HookParameters<"astro:config:setup">["config"];
    logger: HookParameters<"astro:config:setup">["logger"];
}>;
declare const GLOB_PAGES = "**.{astro,ts,js}";
declare function export_default(options: IntegrationOption): {
    pages: Record<string, string>;
    injectPages: (injectRoute: HookParameters<"astro:config:setup">["injectRoute"]) => void;
};

export { GLOB_PAGES, type IntegrationOption, type Option, export_default as default };
