{"version":3,"sources":["../src/integration.ts","../src/i18next/index.ts","../src/i18next/namespaces.ts","../src/i18next/resources.ts","../src/options.ts","../src/sitemap/options.ts","../src/routing/index.ts","../src/routing/hmr.ts","../src/routing/register.ts","../src/sitemap/integration.ts","../src/sitemap/utils.ts","../src/sitemap/generate-sitemap.ts","../src/sitemap/route-config.ts"],"sourcesContent":["import { readFileSync } from \"node:fs\";\nimport {\n\taddIntegration,\n\taddVirtualImports,\n\tcreateResolver,\n\tdefineIntegration,\n} from \"astro-integration-kit\";\nimport { handleI18next } from \"./i18next/index.js\";\nimport { optionsSchema } from \"./options.js\";\nimport { handleRouting } from \"./routing/index.js\";\nimport { integration as sitemapIntegration } from \"./sitemap/integration.js\";\n\nconst VIRTUAL_MODULE_ID = \"i18n:astro\";\nconst CLIENT_ID = \"__INTERNAL_ASTRO_I18N_CONFIG__\";\n\nexport const integration = defineIntegration({\n\tname: \"astro-i18n\",\n\toptionsSchema,\n\tsetup({ options, name }) {\n\t\tconst { resolve } = createResolver(import.meta.url);\n\n\t\tlet dtsContent: string;\n\t\tlet i18nextDtsContent: string;\n\n\t\treturn {\n\t\t\thooks: {\n\t\t\t\t\"astro:config:setup\": (params) => {\n\t\t\t\t\tconst { addMiddleware, logger, updateConfig } = params;\n\n\t\t\t\t\tconst { routes } = handleRouting(params, options);\n\t\t\t\t\tconst {\n\t\t\t\t\t\tnamespaces,\n\t\t\t\t\t\tresources,\n\t\t\t\t\t\tdtsContent: _dtsContent,\n\t\t\t\t\t} = handleI18next(params, options);\n\t\t\t\t\ti18nextDtsContent = _dtsContent;\n\n\t\t\t\t\taddMiddleware({\n\t\t\t\t\t\tentrypoint: resolve(\"../assets/middleware.ts\"),\n\t\t\t\t\t\torder: \"pre\",\n\t\t\t\t\t});\n\n\t\t\t\t\tconst defaultLocaleRoutes = routes.filter(\n\t\t\t\t\t\t(route) => route.locale === options.defaultLocale,\n\t\t\t\t\t);\n\n\t\t\t\t\tconst virtualTypesStub = readFileSync(\n\t\t\t\t\t\tresolve(\"../assets/stubs/virtual.d.ts\"),\n\t\t\t\t\t\t\"utf-8\",\n\t\t\t\t\t);\n\t\t\t\t\tconst typesPlaceholders = {\n\t\t\t\t\t\tid: \"@@_ID_@@\",\n\t\t\t\t\t\tlocale: '\"@@_LOCALE_@@\"',\n\t\t\t\t\t\tlocalePathParams: '\"@@_LOCALE_PATH_PARAMS_@@\"',\n\t\t\t\t\t\tlocales: '\"@@_LOCALES_@@\"',\n\t\t\t\t\t};\n\n\t\t\t\t\tdtsContent = virtualTypesStub\n\t\t\t\t\t\t.replace(typesPlaceholders.id, VIRTUAL_MODULE_ID)\n\t\t\t\t\t\t.replace(\n\t\t\t\t\t\t\ttypesPlaceholders.locale,\n\t\t\t\t\t\t\toptions.locales.map((locale) => `\"${locale}\"`).join(\" | \"),\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.replace(\n\t\t\t\t\t\t\ttypesPlaceholders.localePathParams,\n\t\t\t\t\t\t\t`{${defaultLocaleRoutes\n\t\t\t\t\t\t\t\t.map(\n\t\t\t\t\t\t\t\t\t(route) =>\n\t\t\t\t\t\t\t\t\t\t`\"${route.pattern}\": ${\n\t\t\t\t\t\t\t\t\t\t\troute.params.length === 0\n\t\t\t\t\t\t\t\t\t\t\t\t? \"never\"\n\t\t\t\t\t\t\t\t\t\t\t\t: `{\n\t\t\t\t\t\t\t\t\t\t\t${route.params\n\t\t\t\t\t\t\t\t\t\t\t\t.map((param) => `\"${param}\": string;`)\n\t\t\t\t\t\t\t\t\t\t\t\t.join(\"\\n\")}\n\t\t\t\t\t\t\t\t\t\t\t}`\n\t\t\t\t\t\t\t\t\t\t}`,\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t.join(\";\\n\")}}`,\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.replace(\n\t\t\t\t\t\t\ttypesPlaceholders.locales,\n\t\t\t\t\t\t\tJSON.stringify(options.locales),\n\t\t\t\t\t\t);\n\n\t\t\t\t\tif (options.sitemap) {\n\t\t\t\t\t\taddIntegration(params, {\n\t\t\t\t\t\t\tintegration: sitemapIntegration({\n\t\t\t\t\t\t\t\t...options.sitemap,\n\t\t\t\t\t\t\t\tinternal: {\n\t\t\t\t\t\t\t\t\ti18n: {\n\t\t\t\t\t\t\t\t\t\tdefaultLocale: options.defaultLocale,\n\t\t\t\t\t\t\t\t\t\tlocales: options.locales,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\troutes,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tconst virtualSitemapTypesStub = readFileSync(\n\t\t\t\t\t\t\tresolve(\"../assets/stubs/sitemap.d.ts\"),\n\t\t\t\t\t\t\t\"utf-8\",\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tdtsContent += virtualSitemapTypesStub;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst enabledClientFeatures = Object.entries(options.client)\n\t\t\t\t\t\t.map(([name, enabled]) => ({ name, enabled }))\n\t\t\t\t\t\t.filter((e) => e.enabled);\n\t\t\t\t\tif (enabledClientFeatures.length > 0) {\n\t\t\t\t\t\tlogger.info(\n\t\t\t\t\t\t\t`Client features enabled: ${enabledClientFeatures\n\t\t\t\t\t\t\t\t.map((e) => `\"${e.name}\"`)\n\t\t\t\t\t\t\t\t.join(\n\t\t\t\t\t\t\t\t\t\", \",\n\t\t\t\t\t\t\t\t)}. Make sure to use the \\`<I18nClient />\\` component`,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst virtualModuleStub = readFileSync(\n\t\t\t\t\t\tresolve(\"../assets/stubs/virtual.mjs\"),\n\t\t\t\t\t\t\"utf-8\",\n\t\t\t\t\t);\n\t\t\t\t\tconst scriptPlaceholders = {\n\t\t\t\t\t\tconfig: '\"@@_CONFIG_@@\"',\n\t\t\t\t\t\ti18next: '\"@@_I18NEXT_@@\"',\n\t\t\t\t\t};\n\n\t\t\t\t\taddVirtualImports(params, {\n\t\t\t\t\t\tname,\n\t\t\t\t\t\timports: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tid: \"virtual:astro-i18n/internal\",\n\t\t\t\t\t\t\t\tcontent: `\n\t\t\t\t\t\t\t\texport const options = ${JSON.stringify(options)};\n\t\t\t\t\t\t\t\texport const routes = ${JSON.stringify(routes)};\n\t\t\t\t\t\t\t\texport const i18nextConfig = ${JSON.stringify({\n\t\t\t\t\t\t\t\t\tnamespaces,\n\t\t\t\t\t\t\t\t\tdefaultNamespace: options.defaultNamespace,\n\t\t\t\t\t\t\t\t\tresources,\n\t\t\t\t\t\t\t\t})};\n\t\t\t\t\t\t\t\texport const clientId = ${JSON.stringify(CLIENT_ID)};\n\t\t\t\t\t\t\t`,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tid: \"virtual:astro-i18n/als\",\n\t\t\t\t\t\t\t\tcontent: `\n\t\t\t\t\t\t\t\timport { AsyncLocalStorage } from \"node:async_hooks\";\n\t\t\t\t\t\t\t\texport const als = new AsyncLocalStorage;\n\t\t\t\t\t\t\t`,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tid: VIRTUAL_MODULE_ID,\n\t\t\t\t\t\t\t\tcontent: `\n\t\t\t\t\t\t\t\timport { als } from \"virtual:astro-i18n/als\";\n\t\t\t\t\t\t\t\timport _i18next from \"i18next\";\n\t\t\t\t\t\t\t\t${virtualModuleStub\n\t\t\t\t\t\t\t\t\t.replaceAll(scriptPlaceholders.config, \"als.getStore()\")\n\t\t\t\t\t\t\t\t\t.replaceAll(scriptPlaceholders.i18next, \"_i18next\")}`,\n\t\t\t\t\t\t\t\tcontext: \"server\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tid: VIRTUAL_MODULE_ID,\n\t\t\t\t\t\t\t\tcontent: (() => {\n\t\t\t\t\t\t\t\t\tlet content = \"\";\n\t\t\t\t\t\t\t\t\tif (options.client.translations) {\n\t\t\t\t\t\t\t\t\t\tcontent += `import _i18next from \"i18next\"; `;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tcontent += virtualModuleStub.replaceAll(\n\t\t\t\t\t\t\t\t\t\tscriptPlaceholders.config,\n\t\t\t\t\t\t\t\t\t\t`JSON.parse(document.getElementById(${JSON.stringify(\n\t\t\t\t\t\t\t\t\t\t\tCLIENT_ID,\n\t\t\t\t\t\t\t\t\t\t)}).textContent)`,\n\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\tif (options.client.translations) {\n\t\t\t\t\t\t\t\t\t\tcontent = content.replaceAll(\n\t\t\t\t\t\t\t\t\t\t\tscriptPlaceholders.i18next,\n\t\t\t\t\t\t\t\t\t\t\t\"_i18next\",\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\treturn content;\n\t\t\t\t\t\t\t\t})(),\n\t\t\t\t\t\t\t\tcontext: \"client\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t});\n\n\t\t\t\t\tlogger.info(\"Types injected\");\n\n\t\t\t\t\tif (options.strategy === \"prefix\" && options.rootRedirect) {\n\t\t\t\t\t\tupdateConfig({\n\t\t\t\t\t\t\tredirects: {\n\t\t\t\t\t\t\t\t\"/\": options.rootRedirect,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"astro:config:done\": (params) => {\n\t\t\t\t\tparams.injectTypes({\n\t\t\t\t\t\tfilename: \"astro-i18n.d.ts\",\n\t\t\t\t\t\tcontent: dtsContent,\n\t\t\t\t\t});\n\t\t\t\t\tparams.injectTypes({\n\t\t\t\t\t\tfilename: \"i18next.d.ts\",\n\t\t\t\t\t\tcontent: i18nextDtsContent,\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\t},\n});\n","import { join, relative } from \"node:path\";\nimport { fileURLToPath } from \"node:url\";\nimport { defineUtility, watchDirectory } from \"astro-integration-kit\";\nimport { normalizePath } from \"vite\";\nimport type { Options } from \"../options.js\";\nimport { getNamespaces } from \"./namespaces.js\";\nimport { getResources } from \"./resources.js\";\n\nconst getPaths = (root: URL, options: Options) => {\n\tconst localesDir = normalizePath(\n\t\tfileURLToPath(new URL(options.localesDir, root)),\n\t);\n\tconst defaultLocalesDir = join(localesDir, options.defaultLocale);\n\n\treturn {\n\t\tlocalesDir,\n\t\tdefaultLocalesDir,\n\t};\n};\n\nconst LOGGER_LABEL = \"astro-i18n/i18next\";\n\nexport const handleI18next = defineUtility(\"astro:config:setup\")(\n\t(params, options: Options) => {\n\t\tconst logger = params.logger.fork(LOGGER_LABEL);\n\n\t\tconst paths = getPaths(params.config.root, options);\n\t\twatchDirectory(params, paths.localesDir);\n\t\tlogger.info(\n\t\t\t`Registered watcher for \"${normalizePath(\n\t\t\t\trelative(fileURLToPath(params.config.root), paths.localesDir),\n\t\t\t)}\" directory`,\n\t\t);\n\n\t\tconst { namespaces } = getNamespaces(\n\t\t\tpaths.defaultLocalesDir,\n\t\t\toptions.defaultNamespace,\n\t\t\tlogger,\n\t\t);\n\t\tconst resources = getResources(logger, options, paths.localesDir);\n\t\tconst dtsContent = `\n\ttype Resources = ${JSON.stringify(resources[options.defaultLocale] ?? {})}\n\t\n    declare module \"i18next\" {\n      interface CustomTypeOptions {\n        defaultNS: \"${options.defaultNamespace}\";\n        resources: Resources;\n      }\n    }\n    export {}\n    `;\n\n\t\treturn {\n\t\t\tnamespaces,\n\t\t\tresources,\n\t\t\tdtsContent,\n\t\t};\n\t},\n);\n","import { existsSync, readdirSync } from \"node:fs\";\nimport { basename, extname } from \"node:path\";\nimport type { AstroIntegrationLogger } from \"astro\";\n\nexport const getNamespaces = (\n\tdefaultLocalesDir: string,\n\tdefaultNamespace: string,\n\tlogger: AstroIntegrationLogger,\n) => {\n\tconst importsData: Array<{\n\t\tnamespaceName: string;\n\t\tfileName: string;\n\t}> = [];\n\n\tif (existsSync(defaultLocalesDir)) {\n\t\tconst filenames = readdirSync(defaultLocalesDir).filter((f) =>\n\t\t\tf.endsWith(\".json\"),\n\t\t);\n\t\tfor (const fileName of filenames) {\n\t\t\timportsData.push({\n\t\t\t\tnamespaceName: basename(fileName, extname(fileName)),\n\t\t\t\tfileName,\n\t\t\t});\n\t\t}\n\t}\n\n\tconst namespaces = importsData.map((e) => e.namespaceName);\n\tlogger.info(\n\t\t`Detected namespaces: ${namespaces.map((ns) => `\"${ns}\"`).join(\",\")}`,\n\t);\n\tif (!namespaces.includes(defaultNamespace)) {\n\t\tlogger.warn(`Default namespace \"${defaultNamespace}\" is not detected`);\n\t}\n\n\treturn {\n\t\tnamespaces,\n\t};\n};\n","import { existsSync, readFileSync, readdirSync } from \"node:fs\";\nimport { basename, extname, join } from \"node:path\";\nimport type { AstroIntegrationLogger } from \"astro\";\nimport { normalizePath } from \"vite\";\nimport type { Options } from \"../options.js\";\nimport type { I18nextConfig } from \"../types.js\";\n\nexport const getResources = (\n\tlogger: AstroIntegrationLogger,\n\t{ locales }: Options,\n\tlocalesDir: string,\n) => {\n\tconst resources: I18nextConfig[\"resources\"] = {};\n\n\tconst localesDirs = locales\n\t\t.map((locale) => ({\n\t\t\tlocale,\n\t\t\tdir: normalizePath(join(localesDir, locale)),\n\t\t}))\n\t\t.filter((e) => existsSync(e.dir));\n\n\tfor (const { locale, dir } of localesDirs) {\n\t\tconst filenames = readdirSync(dir).filter((f) => f.endsWith(\".json\"));\n\n\t\tfor (const fileName of filenames) {\n\t\t\tconst path = normalizePath(join(dir, fileName));\n\t\t\ttry {\n\t\t\t\tconst content = JSON.parse(readFileSync(path, \"utf-8\"));\n\n\t\t\t\tresources[locale] ??= {};\n\t\t\t\t// biome-ignore lint/style/noNonNullAssertion: fallback is set above\n\t\t\t\tresources[locale]![basename(fileName, extname(fileName))] = content;\n\t\t\t} catch (err) {\n\t\t\t\tlogger.warn(`Can't parse \"${path}\", skipping.`);\n\t\t\t}\n\t\t}\n\t}\n\n\tlogger.info(\n\t\t`${Object.keys(Object.values(resources)).length} resources registered`,\n\t);\n\treturn resources;\n};\n","import { z } from \"astro/zod\";\nimport { withLeadingSlash, withoutTrailingSlash } from \"ufo\";\nimport {\n\ttype SitemapOptions,\n\tpublicOptionsSchema as sitemapOptionsSchema,\n} from \"./sitemap/options.js\";\n\nconst routeStringSchema = z.string().regex(/^[a-zA-Z0-9_/[\\]-]+$/);\nconst redirectStatusSchema = z\n\t.literal(300)\n\t.or(z.literal(301))\n\t.or(z.literal(302))\n\t.or(z.literal(303))\n\t.or(z.literal(304))\n\t.or(z.literal(307))\n\t.or(z.literal(308));\n\nexport const optionsSchema = z\n\t.object({\n\t\t/**\n\t\t * @description Sets the default locale for your website.\n\t\t * @link https://astro-i18n.netlify.app/usage/configuration/#defaultlocale-required\n\t\t */\n\t\tdefaultLocale: z.string(),\n\t\t/**\n\t\t * @description Sets the available locales for your website. Must include the default locale.\n\t\t * @link https://astro-i18n.netlify.app/usage/configuration/#locales-required\n\t\t */\n\t\tlocales: z.array(z.string()),\n\t\t/**\n\t\t * @description Defines how your routes are generated:\n\t\t *\n\t\t * - `\"prefixWithoutDefault\"` will not add a prefix for your default locale\t\t *\n\t\t * - `\"prefix\"` will add a prefix for your default locale.\n\t\t *\n\t\t * @default `\"prefixWithoutDefault\"`\n\t\t * @link https://astro-i18n.netlify.app/usage/configuration/#strategy\n\t\t */\n\t\tstrategy: z\n\t\t\t.enum([\"prefix\", \"prefixExceptDefault\"])\n\t\t\t.optional()\n\t\t\t.default(\"prefixExceptDefault\"),\n\t\t/**\n\t\t * @description Allows you to define translated paths for your locales.\n\t\t * @link https://astro-i18n.netlify.app/usage/configuration/#pages\n\t\t */\n\t\tpages: z\n\t\t\t.record(\n\t\t\t\trouteStringSchema,\n\t\t\t\tz.record(z.string(), routeStringSchema.optional()),\n\t\t\t)\n\t\t\t.optional()\n\t\t\t.default({})\n\t\t\t.transform((val) =>\n\t\t\t\tObject.fromEntries(\n\t\t\t\t\tObject.entries(val).map(([key, value]) => [\n\t\t\t\t\t\twithLeadingSlash(withoutTrailingSlash(key)),\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t]),\n\t\t\t\t),\n\t\t\t),\n\t\t/**\n\t\t * @description A path relative to the root where locales files are located for translations features.\n\t\t * @default `\"./src/locales\"`\n\t\t * @link https://astro-i18n.netlify.app/usage/configuration/#localesdir\n\t\t */\n\t\tlocalesDir: z\n\t\t\t.string()\n\t\t\t.optional()\n\t\t\t.default(\"./src/locales\")\n\t\t\t.refine((val) => val.startsWith(\"./\") || val.startsWith(\"../\"), {\n\t\t\t\tmessage: \"Must be a relative path (ie. start with `./` or `../`)\",\n\t\t\t}),\n\t\t/**\n\t\t * @description Sets the default namespace for locales. Since `astro-i18n` uses `i18next` under the hood,\n\t\t * it allows to split translations data in multiple json files under `src/locales/[locale]/`. If you're not\n\t\t * using a file called `common.json`, you need to update this property to have proper types completions\n\t\t * when using `t`.\n\t\t *\n\t\t * @default `\"common\"`\n\t\t * @link https://astro-i18n.netlify.app/usage/configuration/#defaultnamespace\n\t\t */\n\t\tdefaultNamespace: z.string().optional().default(\"common\"),\n\t\t/**\n\t\t * @description Client usage is disabled by default because it sends some JavaScript to the browser. Enabling\n\t\t * any of the following features requires importing the `<I18nClient/>` component.\n\t\t *\n\t\t * - `t`: `data`, `translations`\n\t\t * - `getLocale`: `data`\n\t\t * - `getLocales`: `data`\n\t\t * - `getDefaultLocale`: `data`\n\t\t * - `getHtmlAttrs`: `data`\n\t\t * - `setDynamicParams`: N/A, server only\n\t\t * - `getLocalePath`: `data`, `paths`\n\t\t * - `switchLocalePath`: `data`, `paths`\n\t\t * - `getSwitcherData`: `data`, `paths`\n\t\t * - `getLocalePlaceholder`: N/A, `getStaticPaths` only\n\t\t * - `getLocalesPlaceholder`: N/A, `getStaticPaths` only\n\t\t * - `getDefaultLocalePlaceholder`: N/A, `getStaticPaths` only\n\t\t *\n\t\t * @default `false`\n\t\t * @link https://astro-i18n.netlify.app/usage/configuration/#client\n\t\t */\n\t\tclient: z\n\t\t\t.literal(false)\n\t\t\t.or(\n\t\t\t\tz.object({\n\t\t\t\t\t/**\n\t\t\t\t\t * @description Allows using `t` on the client.\n\t\t\t\t\t * @default `false`\n\t\t\t\t\t * @link https://astro-i18n.netlify.app/usage/configuration/#client\n\t\t\t\t\t */\n\t\t\t\t\ttranslations: z.boolean().optional().default(false),\n\t\t\t\t\t/**\n\t\t\t\t\t * @description Allows using `t`, `getLocale`, `getLocales`, `getHtmlAttrs`, `getLocalePath`,\n\t\t\t\t\t * `switchLocalePath` and `getSwitcherData` on the client.\n\t\t\t\t\t *\n\t\t\t\t\t * @default `false`\n\t\t\t\t\t * @link https://astro-i18n.netlify.app/usage/configuration/#client\n\t\t\t\t\t */\n\t\t\t\t\tdata: z.boolean().optional().default(false),\n\t\t\t\t\t/**\n\t\t\t\t\t * @description Allows using `getLocalePath`, `switchLocalePath` and `getSwitcherData` on the client.\n\t\t\t\t\t * @default `false`\n\t\t\t\t\t * @link https://astro-i18n.netlify.app/usage/configuration/#client\n\t\t\t\t\t */\n\t\t\t\t\tpaths: z.boolean().optional().default(false),\n\t\t\t\t}),\n\t\t\t)\n\t\t\t.optional()\n\t\t\t.default(false)\n\t\t\t.transform((val) =>\n\t\t\t\ttypeof val === \"boolean\"\n\t\t\t\t\t? {\n\t\t\t\t\t\t\tdata: val,\n\t\t\t\t\t\t\ttranslations: val,\n\t\t\t\t\t\t\tpaths: val,\n\t\t\t\t\t\t}\n\t\t\t\t\t: val,\n\t\t\t),\n\t\t/**\n\t\t * @description When using `strategy: \"prefix\"`, you may want to redirect your users from the root to a specific\n\t\t * page (likely the default locale root). This option allows you to do so.\n\t\t * @link https://astro-i18n.netlify.app/usage/configuration/#rootredirect\n\t\t */\n\t\trootRedirect: z\n\t\t\t.object({\n\t\t\t\tstatus: redirectStatusSchema,\n\t\t\t\tdestination: z.string(),\n\t\t\t})\n\t\t\t.optional(),\n\t\t/**\n\t\t * @description Allows to generate a sitemap that adapts to your i18n content\n\t\t * @link https://astro-i18n.netlify.app/usage/configuration/#sitemap\n\t\t */\n\t\tsitemap: z\n\t\t\t.union([z.boolean(), sitemapOptionsSchema])\n\t\t\t.optional()\n\t\t\t.default(false)\n\t\t\t.transform((val) =>\n\t\t\t\tval === false ? undefined : val === true ? ({} as SitemapOptions) : val,\n\t\t\t),\n\t})\n\t.refine(({ locales, defaultLocale }) => locales.includes(defaultLocale), {\n\t\tmessage: \"`locales` must include the `defaultLocale`\",\n\t\tpath: [\"locales\"],\n\t})\n\t.refine(\n\t\t({ pages, locales }) =>\n\t\t\tObject.values(pages).every((record) =>\n\t\t\t\tObject.keys(record).every((locale) => locales.includes(locale)),\n\t\t\t),\n\t\t{\n\t\t\tmessage: \"`pages` locale keys must be included in `locales`\",\n\t\t\tpath: [\"pages\"],\n\t\t},\n\t)\n\t.refine(\n\t\t({ strategy, rootRedirect }) => {\n\t\t\tif (strategy === \"prefix\") {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn rootRedirect === undefined;\n\t\t},\n\t\t{\n\t\t\tmessage: \"`rootRedirect` should only be used with `strategy: 'prefix'`\",\n\t\t\tpath: [\"rootRedirect\"],\n\t\t},\n\t);\n\nexport type Options = z.infer<typeof optionsSchema>;\n","import { z } from \"astro/zod\";\nimport { EnumChangefreq } from \"sitemap\";\n\nexport const publicOptionsSchema = z.object({\n\tcustomPages: z.array(z.string().url()).optional(),\n\tentryLimit: z.number().min(1).optional().default(45000),\n\tchangefreq: z.nativeEnum(EnumChangefreq).optional(),\n\tlastmod: z.date().optional(),\n\tpriority: z.number().min(0).max(1).optional(),\n});\nexport const privateOptionsSchema = z.object({\n\tinternal: z.object({\n\t\ti18n: z.object({\n\t\t\tdefaultLocale: z.string(),\n\t\t\tlocales: z.array(z.string()),\n\t\t}),\n\t\troutes: z.array(\n\t\t\tz.object({\n\t\t\t\tlocale: z.string(),\n\t\t\t\tparams: z.array(z.string()),\n\t\t\t\tpattern: z.string(),\n\t\t\t\tinjectedRoute: z.object({\n\t\t\t\t\tpattern: z.string(),\n\t\t\t\t\tentrypoint: z.string(),\n\t\t\t\t\tprerender: z.boolean().optional(),\n\t\t\t\t}),\n\t\t\t}),\n\t\t),\n\t}),\n});\n\nexport const optionsSchema = publicOptionsSchema.and(privateOptionsSchema);\n\nexport type SitemapOptions = z.infer<typeof optionsSchema>;\n","import { defineUtility } from \"astro-integration-kit\";\nimport type { Options } from \"../options.js\";\nimport { handleRoutesHMR } from \"./hmr.js\";\nimport { registerRoutes } from \"./register.js\";\n\nexport const ROUTES_DIR = \"routes\";\nconst LOGGER_LABEL = \"astro-i18n/routing\";\n\nexport const handleRouting = defineUtility(\"astro:config:setup\")(\n\t(params, options: Options) => {\n\t\tconst logger = params.logger.fork(LOGGER_LABEL);\n\n\t\thandleRoutesHMR(params, logger);\n\t\tconst { routes } = registerRoutes(params, options, logger);\n\n\t\treturn { routes };\n\t},\n);\n","import { join, relative } from \"node:path\";\nimport { fileURLToPath } from \"node:url\";\nimport type { AstroIntegrationLogger } from \"astro\";\nimport { defineUtility, watchDirectory } from \"astro-integration-kit\";\nimport { normalizePath } from \"vite\";\nimport { ROUTES_DIR } from \"./index.js\";\n\nexport const handleRoutesHMR = defineUtility(\"astro:config:setup\")(\n\t(params, logger: AstroIntegrationLogger) => {\n\t\tconst { config } = params;\n\n\t\tconst dir = normalizePath(join(fileURLToPath(config.srcDir), ROUTES_DIR));\n\t\twatchDirectory(params, dir);\n\t\tlogger.info(\n\t\t\t`Registered watcher for \"${normalizePath(\n\t\t\t\trelative(fileURLToPath(params.config.root), dir),\n\t\t\t)}\" directory`,\n\t\t);\n\t},\n);\n","import { mkdirSync, readFileSync, rmSync, writeFileSync } from \"node:fs\";\nimport { dirname, join, relative, resolve } from \"node:path\";\nimport { fileURLToPath } from \"node:url\";\nimport type {\n\tAstroIntegrationLogger,\n\tHookParameters,\n\tInjectedRoute,\n} from \"astro\";\nimport { defineUtility } from \"astro-integration-kit\";\nimport { addPageDir } from \"astro-pages\";\nimport { AstroError } from \"astro/errors\";\nimport { withLeadingSlash } from \"ufo\";\nimport { normalizePath } from \"vite\";\nimport type { Options } from \"../options.js\";\nimport type { Route } from \"../types.js\";\nimport { ROUTES_DIR } from \"./index.js\";\n\nconst isPrerendered = (str: string) => {\n\tconst match = str.match(/export const prerender = (\\w+)/);\n\tif (match) {\n\t\treturn match[1] === \"true\";\n\t}\n\treturn undefined;\n};\n\nconst getPages = (\n\tparams: HookParameters<\"astro:config:setup\">,\n): Array<InjectedRoute> => {\n\t// @ts-ignore TODO: update astro-apges when types are fixed\n\treturn Object.entries(addPageDir({ ...params, dir: ROUTES_DIR }).pages).map(\n\t\t([pattern, entrypoint]) => ({ pattern, entrypoint }),\n\t);\n};\n\nconst getPaths = defineUtility(\"astro:config:setup\")(({ config }) => {\n\tconst routesDir = fileURLToPath(new URL(ROUTES_DIR, config.srcDir));\n\tconst entrypointsDir = resolve(\n\t\tfileURLToPath(config.root),\n\t\t\"./.astro/astro-i18n/entrypoints\",\n\t);\n\n\treturn {\n\t\troutesDir,\n\t\tentrypointsDir,\n\t};\n});\n\nconst generateRoute = (\n\t{ strategy, defaultLocale, locales, pages }: Options,\n\tlocale: string,\n\tpage: InjectedRoute,\n\tpaths: ReturnType<typeof getPaths>,\n\tlogger: AstroIntegrationLogger,\n): Route => {\n\tconst getPattern = () => {\n\t\tconst isDefaultLocale = locale === defaultLocale;\n\t\tconst prefix =\n\t\t\tisDefaultLocale && strategy === \"prefixExceptDefault\" ? \"\" : `/${locale}`;\n\t\tconst suffix = withLeadingSlash(\n\t\t\tisDefaultLocale\n\t\t\t\t? page.pattern\n\t\t\t\t: pages?.[page.pattern]?.[locale] ?? page.pattern,\n\t\t);\n\t\treturn prefix + suffix;\n\t};\n\n\tconst transformContent = (entrypoint: string) => {\n\t\tconst updateRelativeImports = (\n\t\t\toriginalPath: string,\n\t\t\tcurrentFilePath: string,\n\t\t\tnewFilePath: string,\n\t\t) => {\n\t\t\tconst absolutePath = resolve(dirname(currentFilePath), originalPath);\n\t\t\tconst relativePath = relative(dirname(newFilePath), absolutePath);\n\t\t\treturn normalizePath(relativePath);\n\t\t};\n\n\t\tmkdirSync(dirname(entrypoint), { recursive: true });\n\n\t\tlet content = readFileSync(page.entrypoint, \"utf-8\");\n\n\t\tif (page.entrypoint.endsWith(\".astro\")) {\n\t\t\ttry {\n\t\t\t\tcontent = content\n\t\t\t\t\t.replaceAll(\"getLocalePlaceholder()\", `\"${locale}\"`)\n\t\t\t\t\t.replaceAll(\n\t\t\t\t\t\t\"getLocalesPlaceholder()\",\n\t\t\t\t\t\t`[${locales.map((locale) => `\"${locale}\"`).join(\", \")}]`,\n\t\t\t\t\t)\n\t\t\t\t\t.replaceAll(\"getDefaultLocalePlaceholder()\", `\"${defaultLocale}\"`);\n\n\t\t\t\tlet [, frontmatter, ...body] = content.split(\"---\");\n\t\t\t\tif (!frontmatter) {\n\t\t\t\t\tthrow new Error(\"No frontmatter found\");\n\t\t\t\t}\n\t\t\t\t// Handle static imports\n\t\t\t\tfrontmatter = frontmatter.replace(\n\t\t\t\t\t/import\\s+([\\s\\S]*?)\\s+from\\s+['\"](.+?)['\"]/g,\n\t\t\t\t\t(_match, p1: string, p2: string) => {\n\t\t\t\t\t\tconst updatedPath =\n\t\t\t\t\t\t\tp2.startsWith(\"./\") || p2.startsWith(\"../\")\n\t\t\t\t\t\t\t\t? updateRelativeImports(p2, page.entrypoint, entrypoint)\n\t\t\t\t\t\t\t\t: p2;\n\t\t\t\t\t\treturn `import ${p1} from '${updatedPath}'`;\n\t\t\t\t\t},\n\t\t\t\t);\n\t\t\t\t// Handle dynamic imports\n\t\t\t\tfrontmatter = frontmatter.replace(\n\t\t\t\t\t/import\\s*\\(\\s*['\"](.+?)['\"]\\s*\\)/g,\n\t\t\t\t\t(_match, p1: string) => {\n\t\t\t\t\t\tconst updatedPath =\n\t\t\t\t\t\t\tp1.startsWith(\"./\") || p1.startsWith(\"../\")\n\t\t\t\t\t\t\t\t? updateRelativeImports(p1, page.entrypoint, entrypoint)\n\t\t\t\t\t\t\t\t: p1;\n\t\t\t\t\t\treturn `import('${updatedPath}')`;\n\t\t\t\t\t},\n\t\t\t\t);\n\n\t\t\t\tcontent = `---${frontmatter}---${body.join(\"---\")}`;\n\t\t\t} catch (err) {\n\t\t\t\tthrow new AstroError(\n\t\t\t\t\t`An error occured while transforming \"${page.entrypoint}\".`,\n\t\t\t\t\t\"Make sure it has a valid frontmatter, even empty\",\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\twriteFileSync(entrypoint, content, \"utf-8\");\n\n\t\treturn {\n\t\t\tprerender: isPrerendered(content),\n\t\t};\n\t};\n\n\tconst getParams = (pattern: string) => {\n\t\tconst params: Array<string> = [];\n\n\t\tconst matches = pattern.match(/\\[([^\\]]+)]/g);\n\t\tif (matches) {\n\t\t\tfor (const match of matches) {\n\t\t\t\tparams.push(match.slice(1, -1));\n\t\t\t}\n\t\t}\n\n\t\treturn params;\n\t};\n\n\tconst pattern = getPattern();\n\tconst entrypoint = join(\n\t\tpaths.entrypointsDir,\n\t\tlocale,\n\t\tnormalizePath(relative(paths.routesDir, page.entrypoint)),\n\t);\n\tconst { prerender } = transformContent(entrypoint);\n\n\tlogger.info(`Injecting \"${pattern}\" route`);\n\treturn {\n\t\tlocale,\n\t\tparams: getParams(pattern),\n\t\tpattern: page.pattern,\n\t\tinjectedRoute: {\n\t\t\tpattern,\n\t\t\tentrypoint,\n\t\t\t...(prerender ? { prerender } : {}),\n\t\t},\n\t};\n};\n\nexport const registerRoutes = (\n\tparams: HookParameters<\"astro:config:setup\">,\n\toptions: Options,\n\tlogger: AstroIntegrationLogger,\n) => {\n\tconst { config, injectRoute } = params;\n\tconst { locales } = options;\n\tlogger.info(\"Starting routes injection...\");\n\n\tconst paths = getPaths(params);\n\trmSync(paths.entrypointsDir, { recursive: true, force: true });\n\tlogger.info(\n\t\t`Cleaned \"${normalizePath(\n\t\t\trelative(fileURLToPath(config.root), paths.entrypointsDir),\n\t\t)}\" directory`,\n\t);\n\n\tconst routes: Array<Route> = [];\n\tconst pages = getPages(params);\n\n\tfor (const locale of locales) {\n\t\tfor (const page of pages) {\n\t\t\troutes.push(generateRoute(options, locale, page, paths, logger));\n\t\t}\n\t}\n\n\tfor (const { injectedRoute } of routes) {\n\t\tinjectRoute(injectedRoute);\n\t}\n\n\treturn { routes };\n};\n","import { relative } from \"node:path\";\nimport { fileURLToPath } from \"node:url\";\nimport routeConfigPlugin from \"@inox-tools/aik-route-config\";\nimport type { AstroConfig, InjectedRoute, RouteData } from \"astro\";\nimport {\n\tdefineIntegration,\n\thasIntegration,\n\twithPlugins,\n} from \"astro-integration-kit\";\nimport { AstroError } from \"astro/errors\";\nimport { z } from \"astro/zod\";\nimport { simpleSitemapAndIndex } from \"sitemap\";\nimport { withoutTrailingSlash } from \"ufo\";\nimport { normalizePath } from \"vite\";\nimport type { Route as InternalRoute } from \"../types.js\";\nimport { generateSitemap } from \"./generate-sitemap.js\";\nimport { optionsSchema } from \"./options.js\";\nimport { type CallbackSchema, callbackSchema } from \"./route-config.js\";\nimport {\n\tcreateImpossibleError,\n\tformatConfigErrorMessage,\n\tgetPathnameFromRouteData,\n\thandleTrailingSlash,\n\tisStatusCodePage,\n\tnormalizeDynamicParams,\n} from \"./utils.js\";\n\nconst OUTFILE = \"sitemap-index.xml\";\n\n// strictest forces us to do weird things\ntype _RouteRoute = Omit<InternalRoute, \"injectedRoute\"> & {\n\tinjectedRoute: Omit<InjectedRoute, \"prerender\"> & {\n\t\tprerender?: boolean | undefined;\n\t};\n};\n\nexport type Route = {\n\tpages: Array<string>;\n\troute: _RouteRoute | undefined;\n\trouteData: RouteData;\n\tsitemapOptions: Array<Exclude<CallbackSchema, false>>;\n\tinclude: boolean;\n};\n\nexport const integration = defineIntegration({\n\tname: \"astro-i18n/sitemap\",\n\toptionsSchema,\n\tsetup({ options, name }) {\n\t\tconst initialRoutes: Array<Route> = options.internal.routes.map(\n\t\t\t(route) => ({\n\t\t\t\tpages: [],\n\t\t\t\troute,\n\t\t\t\trouteData: undefined as unknown as RouteData,\n\t\t\t\tsitemapOptions: [],\n\t\t\t\tinclude: true,\n\t\t\t}),\n\t\t);\n\n\t\tlet config: AstroConfig;\n\n\t\treturn withPlugins({\n\t\t\tname,\n\t\t\tplugins: [routeConfigPlugin],\n\t\t\thooks: {\n\t\t\t\t\"astro:config:setup\": ({ defineRouteConfig, ...params }) => {\n\t\t\t\t\tconst { logger } = params;\n\n\t\t\t\t\tif (hasIntegration(params, { name: \"@astrojs/sitemap\" })) {\n\t\t\t\t\t\tthrow new AstroError(\n\t\t\t\t\t\t\t\"Cannot use both `@astrolicious/i18n` sitemap and `@astrojs/sitemap` integrations at the same time.\",\n\t\t\t\t\t\t\t\"Remove the `@astrojs/sitemap` integration from your project.\",\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tconfig = params.config;\n\n\t\t\t\t\tdefineRouteConfig({\n\t\t\t\t\t\timportName: \"i18n:astro/sitemap\",\n\t\t\t\t\t\tcallbackHandler: ({ routeData }, callback) => {\n\t\t\t\t\t\t\tconst response = callbackSchema.safeParse(callback);\n\t\t\t\t\t\t\tif (!response.success) {\n\t\t\t\t\t\t\t\tthrow new AstroError(\n\t\t\t\t\t\t\t\t\tformatConfigErrorMessage(response.error),\n\t\t\t\t\t\t\t\t\t\"Check your usage of `astro:i18n/sitemap`\",\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfor (const r of routeData) {\n\t\t\t\t\t\t\t\tconst route = initialRoutes.find(\n\t\t\t\t\t\t\t\t\t(e) =>\n\t\t\t\t\t\t\t\t\t\te.route?.injectedRoute.pattern ===\n\t\t\t\t\t\t\t\t\t\tgetPathnameFromRouteData(r),\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tif (!route) {\n\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\troute.routeData = r;\n\t\t\t\t\t\t\t\troute.include = response.data !== false;\n\t\t\t\t\t\t\t\tif (response.data !== false) {\n\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\tresponse.data.changefreq ||\n\t\t\t\t\t\t\t\t\t\tresponse.data.lastmod ||\n\t\t\t\t\t\t\t\t\t\tresponse.data.priority\n\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\tlogger.warn(\n\t\t\t\t\t\t\t\t\t\t\t`Setting \\`changefreq\\`, \\`lastmod\\` or \\`priority\\` on a route basis is not implemented yet (eg. on \"${r.component}\")`,\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\troute.sitemapOptions.push(response.data);\n\t\t\t\t\t\t\t\t\tif (route.route) {\n\t\t\t\t\t\t\t\t\t\tconst { locale, injectedRoute } = route.route;\n\t\t\t\t\t\t\t\t\t\tconst params = normalizeDynamicParams(\n\t\t\t\t\t\t\t\t\t\t\tresponse.data.dynamicParams,\n\t\t\t\t\t\t\t\t\t\t)?.find((e) => e.locale === locale);\n\t\t\t\t\t\t\t\t\t\tif (params) {\n\t\t\t\t\t\t\t\t\t\t\tlet page = injectedRoute.pattern;\n\t\t\t\t\t\t\t\t\t\t\tfor (const [key, value] of Object.entries(\n\t\t\t\t\t\t\t\t\t\t\t\tparams.params,\n\t\t\t\t\t\t\t\t\t\t\t)) {\n\t\t\t\t\t\t\t\t\t\t\t\tif (value) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tpage = page.replace(`[${key}]`, value);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\troute.pages.push(page);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\t\"astro:build:done\": async (params) => {\n\t\t\t\t\tconst { logger } = params;\n\n\t\t\t\t\tfor (const route of initialRoutes) {\n\t\t\t\t\t\tif (route.pages.length === 0 && route.route) {\n\t\t\t\t\t\t\troute.pages.push(route.route.injectedRoute.pattern);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (const r of initialRoutes.filter((e) => !e.routeData)) {\n\t\t\t\t\t\tconst routeData = params.routes.find(\n\t\t\t\t\t\t\t(e) =>\n\t\t\t\t\t\t\t\twithoutTrailingSlash(r.route?.injectedRoute.pattern) ===\n\t\t\t\t\t\t\t\tgetPathnameFromRouteData(e),\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (!routeData) {\n\t\t\t\t\t\t\tthrow createImpossibleError(\n\t\t\t\t\t\t\t\t\"This situation should never occur (a corresponding routeData should always be found)\",\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tr.routeData = routeData;\n\t\t\t\t\t\tr.include = routeData.type === \"page\";\n\t\t\t\t\t}\n\n\t\t\t\t\tconst _routes = [\n\t\t\t\t\t\t...initialRoutes,\n\t\t\t\t\t\t...params.routes\n\t\t\t\t\t\t\t.filter(\n\t\t\t\t\t\t\t\t(e) =>\n\t\t\t\t\t\t\t\t\t!initialRoutes\n\t\t\t\t\t\t\t\t\t\t.map((e) => getPathnameFromRouteData(e.routeData))\n\t\t\t\t\t\t\t\t\t\t.includes(getPathnameFromRouteData(e)),\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.map((routeData) => {\n\t\t\t\t\t\t\t\tconst route: Route = {\n\t\t\t\t\t\t\t\t\tinclude: true,\n\t\t\t\t\t\t\t\t\trouteData,\n\t\t\t\t\t\t\t\t\tpages: [],\n\t\t\t\t\t\t\t\t\troute: undefined,\n\t\t\t\t\t\t\t\t\tsitemapOptions: [],\n\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\treturn route;\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t];\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!config.site) {\n\t\t\t\t\t\t\tlogger.warn(\n\t\t\t\t\t\t\t\t\"The Sitemap integration requires the `site` astro.config option. Skipping.\",\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst { customPages, entryLimit } = options;\n\n\t\t\t\t\t\tif (!config.site) {\n\t\t\t\t\t\t\tlogger.warn(\n\t\t\t\t\t\t\t\t\"The `site` astro.config option is required. Skipping.\",\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst finalSiteUrl = new URL(config.base, config.site);\n\n\t\t\t\t\t\tlet pageUrls = params.pages\n\t\t\t\t\t\t\t.filter((p) => !isStatusCodePage(p.pathname))\n\t\t\t\t\t\t\t.map((p) => {\n\t\t\t\t\t\t\t\tif (p.pathname !== \"\" && !finalSiteUrl.pathname.endsWith(\"/\"))\n\t\t\t\t\t\t\t\t\tfinalSiteUrl.pathname += \"/\";\n\t\t\t\t\t\t\t\tif (p.pathname.startsWith(\"/\"))\n\t\t\t\t\t\t\t\t\tp.pathname = p.pathname.slice(1);\n\t\t\t\t\t\t\t\tconst fullPath = finalSiteUrl.pathname + p.pathname;\n\t\t\t\t\t\t\t\treturn new URL(fullPath, finalSiteUrl).href;\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\tconst routeUrls = _routes.reduce<string[]>((urls, route) => {\n\t\t\t\t\t\t\tconst r = route.routeData;\n\t\t\t\t\t\t\tif (!r) {\n\t\t\t\t\t\t\t\treturn urls;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// Only expose pages, not endpoints or redirects\n\t\t\t\t\t\t\tif (r.type !== \"page\") return urls;\n\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * Dynamic URLs have entries with `undefined` pathnames\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tif (r.pathname) {\n\t\t\t\t\t\t\t\tif (isStatusCodePage(r.pathname ?? r.route)) return urls;\n\n\t\t\t\t\t\t\t\t// `finalSiteUrl` may end with a trailing slash\n\t\t\t\t\t\t\t\t// or not because of base paths.\n\t\t\t\t\t\t\t\tlet fullPath = finalSiteUrl.pathname;\n\t\t\t\t\t\t\t\tif (fullPath.endsWith(\"/\"))\n\t\t\t\t\t\t\t\t\tfullPath += r.generate(r.pathname).substring(1);\n\t\t\t\t\t\t\t\telse fullPath += r.generate(r.pathname);\n\n\t\t\t\t\t\t\t\tconst newUrl = new URL(fullPath, finalSiteUrl).href;\n\n\t\t\t\t\t\t\t\turls.push(handleTrailingSlash(newUrl, config));\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn urls;\n\t\t\t\t\t\t}, []);\n\n\t\t\t\t\t\tpageUrls = Array.from(\n\t\t\t\t\t\t\tnew Set([...pageUrls, ...routeUrls, ...(customPages ?? [])]),\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tpageUrls = pageUrls.filter((page) => {\n\t\t\t\t\t\t\tconst route = normalizePath(\n\t\t\t\t\t\t\t\t`/${relative(config.base, new URL(page).pathname)}`,\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tconst excludedRoutes = _routes.filter((e) => !e.include);\n\t\t\t\t\t\t\tfor (const { routeData } of excludedRoutes) {\n\t\t\t\t\t\t\t\t// biome-ignore lint/style/noNonNullAssertion: <explanation>\n\t\t\t\t\t\t\t\tif (routeData!.pattern.test(route)) {\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tif (pageUrls.length === 0) {\n\t\t\t\t\t\t\tlogger.warn(`No pages found!\\n\\`${OUTFILE}\\` not created.`);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (const route of _routes.filter((e) => e.include)) {\n\t\t\t\t\t\t\troute.pages = route.pages.map((page) =>\n\t\t\t\t\t\t\t\tpage.startsWith(\"/\")\n\t\t\t\t\t\t\t\t\t? handleTrailingSlash(\n\t\t\t\t\t\t\t\t\t\t\tnew URL(page, finalSiteUrl).href,\n\t\t\t\t\t\t\t\t\t\t\tconfig,\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t: page,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst urlData = generateSitemap(\n\t\t\t\t\t\t\t_routes.filter((e) => e.include),\n\t\t\t\t\t\t\tfinalSiteUrl.href,\n\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\tconfig,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tconst destDir = fileURLToPath(params.dir);\n\t\t\t\t\t\tawait simpleSitemapAndIndex({\n\t\t\t\t\t\t\thostname: finalSiteUrl.href,\n\t\t\t\t\t\t\tdestinationDir: destDir,\n\t\t\t\t\t\t\tsourceData: urlData,\n\t\t\t\t\t\t\tlimit: entryLimit,\n\t\t\t\t\t\t\tgzip: false,\n\t\t\t\t\t\t});\n\t\t\t\t\t\tlogger.info(\n\t\t\t\t\t\t\t`\\`${OUTFILE}\\` created at \\`${relative(\n\t\t\t\t\t\t\t\tprocess.cwd(),\n\t\t\t\t\t\t\t\tdestDir,\n\t\t\t\t\t\t\t)}\\``,\n\t\t\t\t\t\t);\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\tif (err instanceof z.ZodError) {\n\t\t\t\t\t\t\tlogger.warn(formatConfigErrorMessage(err));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow err;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t},\n});\n","import type { AstroConfig, RouteData } from \"astro\";\nimport { AstroError } from \"astro/errors\";\nimport type { ZodError } from \"astro/zod\";\nimport type { Route } from \"./integration.js\";\n\nconst STATUS_CODE_PAGES = new Set([\"404\", \"500\"]);\n\nexport const isStatusCodePage = (_pathname: string): boolean => {\n\tlet pathname = _pathname;\n\tif (pathname.endsWith(\"/\")) {\n\t\tpathname = pathname.slice(0, -1);\n\t}\n\tconst end = pathname.split(\"/\").pop() ?? \"\";\n\treturn STATUS_CODE_PAGES.has(end);\n};\n\nexport const formatConfigErrorMessage = (err: ZodError) => {\n\tconst errorList = err.issues.map(\n\t\t(issue) => ` ${issue.path.join(\".\")}  ${`${issue.message}.`}`,\n\t);\n\treturn errorList.join(\"\\n\");\n};\n\nexport const createImpossibleError = (message: string) =>\n\tnew AstroError(\n\t\tmessage,\n\t\t\"Please open an issue on GitHub at https://github.com/astrolicious/i18n/issues\",\n\t);\n\nexport const getPathnameFromRouteData = ({ segments }: RouteData) => {\n\tconst pathname = segments\n\t\t.map((segment) => {\n\t\t\treturn segment\n\t\t\t\t.map((rp) => (rp.dynamic ? `[${rp.content}]` : rp.content))\n\t\t\t\t.join(\"\");\n\t\t})\n\t\t.join(\"/\");\n\n\treturn `/${pathname}`;\n};\n\nexport const normalizeDynamicParams = (\n\t_params: Route[\"sitemapOptions\"][number][\"dynamicParams\"],\n) => {\n\tif (!_params) {\n\t\treturn [];\n\t}\n\n\tif (Array.isArray(_params)) {\n\t\treturn _params;\n\t}\n\n\treturn Object.entries(_params).map(([locale, params]) => ({\n\t\tlocale,\n\t\tparams,\n\t}));\n};\n\nexport const handleTrailingSlash = (url: string, config: AstroConfig) => {\n\tif (config.trailingSlash === \"never\") {\n\t\treturn url;\n\t}\n\tif (config.build.format === \"directory\" && !url.endsWith(\"/\")) {\n\t\treturn `${url}/`;\n\t}\n\treturn url;\n};\n","import type { AstroConfig } from \"astro\";\nimport type { LinkItem, SitemapItemLoose } from \"sitemap\";\nimport type { Route } from \"./integration.js\";\nimport type { SitemapOptions } from \"./options.js\";\nimport {\n\tcreateImpossibleError,\n\thandleTrailingSlash,\n\tnormalizeDynamicParams,\n} from \"./utils.js\";\n\ntype NoUndefinedField<T> = {\n\t[P in keyof T]-?: NonNullable<T[P]>;\n};\n\n/** Construct sitemap.xml given a set of URLs */\nexport function generateSitemap(\n\troutes: Array<Route>,\n\t_finalSiteUrl: string,\n\topts: SitemapOptions,\n\tconfig: AstroConfig,\n) {\n\tconst { changefreq, priority, lastmod: lastmodSrc } = opts;\n\tconst lastmod = lastmodSrc?.toISOString();\n\n\tconst getLinksFromRoute = (route: NoUndefinedField<Route>, page: string) => {\n\t\tif (!route.route) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst links: Array<LinkItem> = [];\n\n\t\tconst equivalentRoutes = routes.filter(\n\t\t\t(e) =>\n\t\t\t\te.route &&\n\t\t\t\te.route.pattern === route.route.pattern &&\n\t\t\t\te.route.locale !== route.route.locale,\n\t\t) as Array<NoUndefinedField<Route>>;\n\n\t\tlinks.push({\n\t\t\tlang: route.route.locale,\n\t\t\turl: page,\n\t\t});\n\n\t\t// Handle static links\n\t\tif (route.routeData.params.length === 0) {\n\t\t\tfor (const equivalentRoute of equivalentRoutes) {\n\t\t\t\tlinks.push({\n\t\t\t\t\tlang: equivalentRoute.route.locale,\n\t\t\t\t\turl: handleTrailingSlash(\n\t\t\t\t\t\t`${new URL(page).origin}${\n\t\t\t\t\t\t\tequivalentRoute.route.injectedRoute.pattern\n\t\t\t\t\t\t}`,\n\t\t\t\t\t\tconfig,\n\t\t\t\t\t),\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn [...links].sort((a, b) =>\n\t\t\t\ta.lang.localeCompare(b.lang, \"en\", { numeric: true }),\n\t\t\t);\n\t\t}\n\n\t\tconst index = route.pages.indexOf(page);\n\t\tconst sitemapOptions = route.sitemapOptions.filter(\n\t\t\t(e) =>\n\t\t\t\te.dynamicParams &&\n\t\t\t\t(Array.isArray(e.dynamicParams)\n\t\t\t\t\t? e.dynamicParams\n\t\t\t\t\t: Object.entries(e.dynamicParams)\n\t\t\t\t).length > 0,\n\t\t)[index];\n\t\tif (!sitemapOptions || !sitemapOptions.dynamicParams) {\n\t\t\treturn [];\n\t\t}\n\n\t\tfor (const equivalentRoute of equivalentRoutes) {\n\t\t\tconst options = normalizeDynamicParams(sitemapOptions.dynamicParams).find(\n\t\t\t\t(e) => e.locale === equivalentRoute.route.locale,\n\t\t\t);\n\n\t\t\tif (!options) {\n\t\t\t\t// A dynamic route is not required to always have an equivalent in another language eg.\n\t\t\t\t// en: /blog/a\n\t\t\t\t// fr: /fr/le-blog/b\n\t\t\t\t// it: none\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet newPage = equivalentRoute.route.injectedRoute.pattern;\n\t\t\tfor (const [key, value] of Object.entries(options.params)) {\n\t\t\t\tif (!value) {\n\t\t\t\t\tthrow createImpossibleError(\n\t\t\t\t\t\t\"This situation should never occur (value is not set)\",\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tnewPage = newPage.replace(`[${key}]`, value);\n\t\t\t}\n\t\t\tnewPage = handleTrailingSlash(\n\t\t\t\t`${new URL(page).origin}${newPage}`,\n\t\t\t\tconfig,\n\t\t\t);\n\t\t\tlinks.push({\n\t\t\t\tlang: equivalentRoute.route.locale,\n\t\t\t\turl: newPage,\n\t\t\t});\n\t\t}\n\t\treturn [...links].sort((a, b) =>\n\t\t\ta.lang.localeCompare(b.lang, \"en\", { numeric: true }),\n\t\t);\n\t};\n\n\tconst urlData: Array<SitemapItemLoose> = [];\n\tfor (const route of routes) {\n\t\tfor (const page of route.pages) {\n\t\t\tconst links: Array<LinkItem> = [];\n\t\t\tif (route.route) {\n\t\t\t\tconst _links = getLinksFromRoute(\n\t\t\t\t\t// Required because TS\n\t\t\t\t\t{\n\t\t\t\t\t\t...route,\n\t\t\t\t\t\troute: route.route,\n\t\t\t\t\t},\n\t\t\t\t\tpage,\n\t\t\t\t);\n\t\t\t\tlinks.push(..._links);\n\t\t\t}\n\n\t\t\tconst obj: SitemapItemLoose = {\n\t\t\t\turl: page,\n\t\t\t\tlinks,\n\t\t\t};\n\n\t\t\t// TODO: get from sitemap options first\n\t\t\tif (changefreq) {\n\t\t\t\tObject.assign(obj, { changefreq });\n\t\t\t}\n\t\t\tif (lastmod) {\n\t\t\t\tObject.assign(obj, { lastmod });\n\t\t\t}\n\t\t\tif (priority) {\n\t\t\t\tObject.assign(obj, { priority });\n\t\t\t}\n\n\t\t\turlData.push(obj);\n\t\t}\n\t}\n\n\treturn [...urlData].sort((a, b) =>\n\t\ta.url.localeCompare(b.url, \"en\", { numeric: true }),\n\t);\n}\n","import { z } from \"astro/zod\";\nimport { publicOptionsSchema } from \"./options.js\";\n\nexport const callbackSchema = z\n\t.union([\n\t\tz.literal(false),\n\t\tz\n\t\t\t.object({\n\t\t\t\tdynamicParams: z\n\t\t\t\t\t.union([\n\t\t\t\t\t\tz.record(z.record(z.string().optional())),\n\t\t\t\t\t\tz.array(\n\t\t\t\t\t\t\tz.object({\n\t\t\t\t\t\t\t\tlocale: z.string(),\n\t\t\t\t\t\t\t\tparams: z.record(z.string()),\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t),\n\t\t\t\t\t])\n\t\t\t\t\t.optional(),\n\t\t\t})\n\t\t\t.and(\n\t\t\t\tpublicOptionsSchema\n\t\t\t\t\t.pick({\n\t\t\t\t\t\tlastmod: true,\n\t\t\t\t\t\tpriority: true,\n\t\t\t\t\t\tchangefreq: true,\n\t\t\t\t\t})\n\t\t\t\t\t.partial(),\n\t\t\t),\n\t])\n\t.optional()\n\t.default({});\n\nexport type CallbackSchema = z.infer<typeof callbackSchema>;\n"],"mappings":"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","names":["readFileSync","addIntegration","addVirtualImports","createResolver","defineIntegration","join","relative","fileURLToPath","defineUtility","watchDirectory","normalizePath","existsSync","readdirSync","basename","extname","getNamespaces","defaultLocalesDir","defaultNamespace","logger","importsData","filenames","f","fileName","namespaces","e","ns","existsSync","readFileSync","readdirSync","basename","extname","join","normalizePath","getResources","logger","locales","localesDir","resources","localesDirs","locale","e","dir","filenames","f","fileName","path","content","getPaths","root","options","localesDir","normalizePath","fileURLToPath","defaultLocalesDir","join","LOGGER_LABEL","handleI18next","defineUtility","params","logger","paths","watchDirectory","relative","namespaces","getNamespaces","resources","getResources","dtsContent","z","withLeadingSlash","withoutTrailingSlash","z","EnumChangefreq","publicOptionsSchema","privateOptionsSchema","optionsSchema","routeStringSchema","z","redirectStatusSchema","optionsSchema","val","key","value","withLeadingSlash","withoutTrailingSlash","publicOptionsSchema","locales","defaultLocale","pages","record","locale","strategy","rootRedirect","defineUtility","join","relative","fileURLToPath","defineUtility","watchDirectory","normalizePath","handleRoutesHMR","defineUtility","params","logger","config","dir","normalizePath","join","fileURLToPath","ROUTES_DIR","watchDirectory","relative","mkdirSync","readFileSync","rmSync","writeFileSync","dirname","join","relative","resolve","fileURLToPath","defineUtility","addPageDir","AstroError","withLeadingSlash","normalizePath","isPrerendered","str","match","getPages","params","addPageDir","ROUTES_DIR","pattern","entrypoint","getPaths","defineUtility","config","routesDir","fileURLToPath","entrypointsDir","resolve","generateRoute","strategy","defaultLocale","locales","pages","locale","page","paths","logger","getPattern","isDefaultLocale","prefix","suffix","withLeadingSlash","transformContent","updateRelativeImports","originalPath","currentFilePath","newFilePath","absolutePath","dirname","relativePath","relative","normalizePath","mkdirSync","content","readFileSync","frontmatter","body","_match","p1","p2","updatedPath","AstroError","writeFileSync","getParams","matches","join","prerender","registerRoutes","options","injectRoute","rmSync","routes","injectedRoute","ROUTES_DIR","LOGGER_LABEL","handleRouting","defineUtility","params","options","logger","handleRoutesHMR","routes","registerRoutes","relative","fileURLToPath","routeConfigPlugin","defineIntegration","hasIntegration","withPlugins","AstroError","z","simpleSitemapAndIndex","withoutTrailingSlash","normalizePath","AstroError","STATUS_CODE_PAGES","isStatusCodePage","_pathname","pathname","end","formatConfigErrorMessage","err","issue","createImpossibleError","message","getPathnameFromRouteData","segments","segment","rp","normalizeDynamicParams","_params","locale","params","handleTrailingSlash","url","config","generateSitemap","routes","_finalSiteUrl","opts","config","changefreq","priority","lastmodSrc","lastmod","getLinksFromRoute","route","page","links","equivalentRoutes","e","equivalentRoute","handleTrailingSlash","a","b","index","sitemapOptions","options","normalizeDynamicParams","newPage","key","value","createImpossibleError","urlData","_links","obj","z","callbackSchema","z","publicOptionsSchema","OUTFILE","integration","defineIntegration","optionsSchema","options","name","initialRoutes","route","config","withPlugins","routeConfigPlugin","defineRouteConfig","params","logger","hasIntegration","AstroError","routeData","callback","response","callbackSchema","formatConfigErrorMessage","r","e","getPathnameFromRouteData","locale","injectedRoute","normalizeDynamicParams","page","key","value","withoutTrailingSlash","createImpossibleError","_routes","customPages","entryLimit","finalSiteUrl","pageUrls","p","isStatusCodePage","fullPath","routeUrls","urls","newUrl","handleTrailingSlash","normalizePath","relative","excludedRoutes","urlData","generateSitemap","destDir","fileURLToPath","simpleSitemapAndIndex","err","z","VIRTUAL_MODULE_ID","CLIENT_ID","integration","defineIntegration","optionsSchema","options","name","resolve","createResolver","dtsContent","i18nextDtsContent","params","addMiddleware","logger","updateConfig","routes","handleRouting","namespaces","resources","_dtsContent","handleI18next","defaultLocaleRoutes","route","virtualTypesStub","readFileSync","typesPlaceholders","locale","param","addIntegration","virtualSitemapTypesStub","enabledClientFeatures","enabled","e","virtualModuleStub","scriptPlaceholders","addVirtualImports","content"]}