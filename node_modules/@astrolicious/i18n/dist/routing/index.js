import{defineUtility as V}from"astro-integration-kit";import{join as k,relative as T}from"node:path";import{fileURLToPath as O}from"node:url";import{defineUtility as _,watchDirectory as H}from"astro-integration-kit";import{normalizePath as S}from"vite";var v=_("astro:config:setup")((t,r)=>{let{config:o}=t,c=S(k(O(o.srcDir),h));H(t,c),r.info(`Registered watcher for "${S(T(O(t.config.root),c))}" directory`)});import{mkdirSync as W,readFileSync as b,rmSync as M,writeFileSync as z}from"node:fs";import{dirname as D,join as C,relative as L,resolve as x}from"node:path";import{fileURLToPath as A}from"node:url";import{defineUtility as F}from"astro-integration-kit";import{addPageDir as G}from"astro-pages";import{AstroError as B}from"astro/errors";import{withLeadingSlash as N}from"ufo";import{normalizePath as $}from"vite";var q=t=>{let r=t.match(/export const prerender = (\w+)/);if(r)return r[1]==="true"},J=t=>Object.entries(G({...t,dir:h}).pages).map(([r,o])=>({pattern:r,entrypoint:o})),K=F("astro:config:setup")(({config:t})=>{let r=A(new URL(h,t.srcDir)),o=x(A(t.root),"./.astro/astro-i18n/entrypoints");return{routesDir:r,entrypointsDir:o}}),Q=({strategy:t,defaultLocale:r,locales:o,pages:c},a,e,u,g)=>{let y=()=>{let s=a===r,m=s&&t==="prefixExceptDefault"?"":`/${a}`,n=N(s?e.pattern:c?.[e.pattern]?.[a]??e.pattern);return m+n},d=s=>{let m=(i,j,l)=>{let f=x(D(j),i),p=L(D(l),f);return $(p)};W(D(s),{recursive:!0});let n=b(e.entrypoint,"utf-8");if(e.entrypoint.endsWith(".astro"))try{n=n.replaceAll("getLocalePlaceholder()",`"${a}"`).replaceAll("getLocalesPlaceholder()",`[${o.map(l=>`"${l}"`).join(", ")}]`).replaceAll("getDefaultLocalePlaceholder()",`"${r}"`);let[,i,...j]=n.split("---");if(!i)throw new Error("No frontmatter found");i=i.replace(/import\s+([\s\S]*?)\s+from\s+['"](.+?)['"]/g,(l,f,p)=>{let E=p.startsWith("./")||p.startsWith("../")?m(p,e.entrypoint,s):p;return`import ${f} from '${E}'`}),i=i.replace(/import\s*\(\s*['"](.+?)['"]\s*\)/g,(l,f)=>`import('${f.startsWith("./")||f.startsWith("../")?m(f,e.entrypoint,s):f}')`),n=`---${i}---${j.join("---")}`}catch{throw new B(`An error occured while transforming "${e.entrypoint}".`,"Make sure it has a valid frontmatter, even empty")}return z(s,n,"utf-8"),{prerender:q(n)}},R=s=>{let m=[],n=s.match(/\[([^\]]+)]/g);if(n)for(let i of n)m.push(i.slice(1,-1));return m},P=y(),I=C(u.entrypointsDir,a,$(L(u.routesDir,e.entrypoint))),{prerender:w}=d(I);return g.info(`Injecting "${P}" route`),{locale:a,params:R(P),pattern:e.pattern,injectedRoute:{pattern:P,entrypoint:I,...w?{prerender:w}:{}}}},U=(t,r,o)=>{let{config:c,injectRoute:a}=t,{locales:e}=r;o.info("Starting routes injection...");let u=K(t);M(u.entrypointsDir,{recursive:!0,force:!0}),o.info(`Cleaned "${$(L(A(c.root),u.entrypointsDir))}" directory`);let g=[],y=J(t);for(let d of e)for(let R of y)g.push(Q(r,d,R,u,o));for(let{injectedRoute:d}of g)a(d);return{routes:g}};var h="routes",X="astro-i18n/routing",yt=V("astro:config:setup")((t,r)=>{let o=t.logger.fork(X);v(t,o);let{routes:c}=U(t,r,o);return{routes:c}});export{h as ROUTES_DIR,yt as handleRouting};
//# sourceMappingURL=index.js.map