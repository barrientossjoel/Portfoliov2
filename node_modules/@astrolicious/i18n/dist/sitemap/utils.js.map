{"version":3,"sources":["../../src/sitemap/utils.ts"],"sourcesContent":["import type { AstroConfig, RouteData } from \"astro\";\nimport { AstroError } from \"astro/errors\";\nimport type { ZodError } from \"astro/zod\";\nimport type { Route } from \"./integration.js\";\n\nconst STATUS_CODE_PAGES = new Set([\"404\", \"500\"]);\n\nexport const isStatusCodePage = (_pathname: string): boolean => {\n\tlet pathname = _pathname;\n\tif (pathname.endsWith(\"/\")) {\n\t\tpathname = pathname.slice(0, -1);\n\t}\n\tconst end = pathname.split(\"/\").pop() ?? \"\";\n\treturn STATUS_CODE_PAGES.has(end);\n};\n\nexport const formatConfigErrorMessage = (err: ZodError) => {\n\tconst errorList = err.issues.map(\n\t\t(issue) => ` ${issue.path.join(\".\")}  ${`${issue.message}.`}`,\n\t);\n\treturn errorList.join(\"\\n\");\n};\n\nexport const createImpossibleError = (message: string) =>\n\tnew AstroError(\n\t\tmessage,\n\t\t\"Please open an issue on GitHub at https://github.com/astrolicious/i18n/issues\",\n\t);\n\nexport const getPathnameFromRouteData = ({ segments }: RouteData) => {\n\tconst pathname = segments\n\t\t.map((segment) => {\n\t\t\treturn segment\n\t\t\t\t.map((rp) => (rp.dynamic ? `[${rp.content}]` : rp.content))\n\t\t\t\t.join(\"\");\n\t\t})\n\t\t.join(\"/\");\n\n\treturn `/${pathname}`;\n};\n\nexport const normalizeDynamicParams = (\n\t_params: Route[\"sitemapOptions\"][number][\"dynamicParams\"],\n) => {\n\tif (!_params) {\n\t\treturn [];\n\t}\n\n\tif (Array.isArray(_params)) {\n\t\treturn _params;\n\t}\n\n\treturn Object.entries(_params).map(([locale, params]) => ({\n\t\tlocale,\n\t\tparams,\n\t}));\n};\n\nexport const handleTrailingSlash = (url: string, config: AstroConfig) => {\n\tif (config.trailingSlash === \"never\") {\n\t\treturn url;\n\t}\n\tif (config.build.format === \"directory\" && !url.endsWith(\"/\")) {\n\t\treturn `${url}/`;\n\t}\n\treturn url;\n};\n"],"mappings":"AACA,OAAS,cAAAA,MAAkB,eAI3B,IAAMC,EAAoB,IAAI,IAAI,CAAC,MAAO,KAAK,CAAC,EAEnCC,EAAoBC,GAA+B,CAC/D,IAAIC,EAAWD,EACXC,EAAS,SAAS,GAAG,IACxBA,EAAWA,EAAS,MAAM,EAAG,EAAE,GAEhC,IAAMC,EAAMD,EAAS,MAAM,GAAG,EAAE,IAAI,GAAK,GACzC,OAAOH,EAAkB,IAAII,CAAG,CACjC,EAEaC,EAA4BC,GACtBA,EAAI,OAAO,IAC3BC,GAAU,IAAIA,EAAM,KAAK,KAAK,GAAG,CAAC,KAAK,GAAGA,EAAM,OAAO,GAAG,EAC5D,EACiB,KAAK;AAAA,CAAI,EAGdC,EAAyBC,GACrC,IAAIV,EACHU,EACA,+EACD,EAEYC,EAA2B,CAAC,CAAE,SAAAC,CAAS,IAS5C,IARUA,EACf,IAAKC,GACEA,EACL,IAAKC,GAAQA,EAAG,QAAU,IAAIA,EAAG,OAAO,IAAMA,EAAG,OAAQ,EACzD,KAAK,EAAE,CACT,EACA,KAAK,GAAG,CAES,GAGPC,EACZC,GAEKA,EAID,MAAM,QAAQA,CAAO,EACjBA,EAGD,OAAO,QAAQA,CAAO,EAAE,IAAI,CAAC,CAACC,EAAQC,CAAM,KAAO,CACzD,OAAAD,EACA,OAAAC,CACD,EAAE,EAVM,CAAC,EAaGC,EAAsB,CAACC,EAAaC,IAC5CA,EAAO,gBAAkB,QACrBD,EAEJC,EAAO,MAAM,SAAW,aAAe,CAACD,EAAI,SAAS,GAAG,EACpD,GAAGA,CAAG,IAEPA","names":["AstroError","STATUS_CODE_PAGES","isStatusCodePage","_pathname","pathname","end","formatConfigErrorMessage","err","issue","createImpossibleError","message","getPathnameFromRouteData","segments","segment","rp","normalizeDynamicParams","_params","locale","params","handleTrailingSlash","url","config"]}