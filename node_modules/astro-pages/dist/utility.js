import{existsSync as j}from"node:fs";import{dirname as v,extname as l,isAbsolute as A,resolve as u}from"node:path";import{fileURLToPath as w}from"node:url";import{AstroError as d}from"astro/errors";import O from"fast-glob";var m="**.{astro,ts,js}";function _(e){let{dir:r,cwd:i,glob:t=m,pattern:f,log:o,config:x,logger:c}=e,p=w(x.srcDir.toString());i=y(e,"cwd",p,i),r=y(e,"dir",i,r),Array.isArray(t)&&t.length<=0&&(t=m);let P=O.sync([t,"!**/_*","!**/_**/*","!**/content/config.ts","!**/node_modules","!**/*.(d|wasm).(ts|js)"].flat(),{cwd:r,absolute:!0}),a={};for(let s of P){let n=s.slice(r.length,-l(s).length).replace(/(\\|\/)index$/,"")||"/";a[n]=s}function b(s){if(r===u(p,"pages"))throw new d("Failed to inject pages! Directory cannot point to Astro's 'pages' directory",r);o&&c.info("Adding pages: "+r);for(let[n,g]of Object.entries(a)){if(f&&(n=f({dir:r,cwd:i,entrypoint:g,ext:l(g),pattern:n})),!n){o==="verbose"&&c.warn(`Invalid pattern, skipping entrypoint: ${g}`);continue}o==="verbose"&&c.info("Injecting pattern: "+n),s({entryPoint:g,entrypoint:g,pattern:n})}}return{pages:a,injectPages:b}}function y(e,r,i,t){let{log:f,logger:o}=e;if(r==="dir"&&(!t||typeof t!="string"))throw new d(`'${r}' path is invalid!`,t);if(t||(t=i),t.startsWith("file:/")&&(t=w(t)),A(t)||(t=u(i,t)),l(t)&&(f==="verbose"&&o.warn(`'${r}' is a file, using file's directory instead`),t=v(t)),!j(t))throw new d(`'${r}' path does not exist!`,t);return t}export{m as GLOB_PAGES,_ as default};
//# sourceMappingURL=utility.js.map