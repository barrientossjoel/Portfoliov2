{"version":3,"sources":["../src/hoistGlobalPlugin.ts","../src/debug.ts","../src/contextResolution.ts","../src/index.ts"],"names":["path","addVitePlugin"],"mappings":"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","file":"index.js","sourcesContent":["import * as assert from 'assert';\nimport type { NodePath } from 'ast-types/lib/node-path.js';\nimport type { Context } from 'ast-types/lib/path-visitor.js';\nimport type { AstroIntegrationLogger } from 'astro';\nimport * as recast from 'recast';\nimport * as parser from 'recast/parsers/typescript.js';\nimport type { Plugin, TransformResult } from 'vite';\n\nconst b = recast.types.builders;\n\ntype HoistGlobalOptions = {\n\tconfigImport: string;\n\tlogger: AstroIntegrationLogger;\n};\n\nexport function hoistGlobalPlugin(options: HoistGlobalOptions): Plugin {\n\tconst resolvedId = '\\x00' + options.configImport;\n\n\treturn {\n\t\tname: `@inox-tools/aik-route-config/${options.configImport}`,\n\t\tresolveId(id) {\n\t\t\tif (id === options.configImport) {\n\t\t\t\treturn resolvedId;\n\t\t\t}\n\t\t},\n\t\tload(id) {\n\t\t\tif (id === resolvedId) {\n\t\t\t\treturn `\n        export default function(context, cb) {\n          globalThis[Symbol.for('@inox-tools/aik-route-config')]?.get('${options.configImport}')?.(context, cb);\n        }`;\n\t\t\t}\n\t\t},\n\t\ttransform(code, id) {\n\t\t\tif (id.endsWith('.astro')) {\n\t\t\t\treturn hoistImport({\n\t\t\t\t\tlogger: options.logger,\n\t\t\t\t\tmagicImport: options.configImport,\n\t\t\t\t\tcurrentModule: id,\n\t\t\t\t\tcode,\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t};\n}\n\ntype HoistOptions = {\n\tmagicImport: string;\n\tcurrentModule: string;\n\tcode: string;\n\tlogger: AstroIntegrationLogger;\n};\n\n/** @internal */\nexport function hoistImport({\n\tmagicImport,\n\tcurrentModule,\n\tcode,\n\tlogger,\n}: HoistOptions): TransformResult | null {\n\tlet ast: ReturnType<typeof parser.parse>;\n\ttry {\n\t\tast = recast.parse(code, {\n\t\t\tsourceFileName: currentModule,\n\t\t\tparser: {\n\t\t\t\tparse(_code: string) {\n\t\t\t\t\treturn parser.parse(_code, {\n\t\t\t\t\t\tsourceType: 'module',\n\t\t\t\t\t\tstrictMode: false,\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t} catch (e) {\n\t\tlogger.error(`Error on parsing: ${e}`);\n\t\tlogger.error(`Code: ${code}`);\n\t\tthrow e;\n\t}\n\n\tconst visitor = makeVisitor(magicImport, currentModule, logger);\n\trecast.visit(ast, visitor);\n\n\tif (visitor.state.phase === VisitorPhase.Cancelled) return null;\n\n\tconst newCode = recast.print(ast, { sourceFileName: currentModule, sourceMapName: 'foo' });\n\n\treturn {\n\t\tcode: newCode.code,\n\t\tmap: {\n\t\t\tmappings: newCode.map!.mappings,\n\t\t},\n\t};\n}\n\nenum VisitorPhase {\n\tInitializing = 'Initializing',\n\tInitialized = 'Initialized',\n\tCancelled = 'Cancelled',\n\tHoistingCalls = 'HoistingCalls',\n\tEnrichingCallsInPlace = 'EnrichingCallsInPlace',\n\tDroppingCalls = 'DroppingCalls',\n}\n\ninterface Visitor extends recast.types.Visitor<Visitor> {\n\tstate: {\n\t\tfoundNames: string[];\n\t\tastroNode?: NodePath<recast.types.namedTypes.VariableDeclaration>;\n\t\tphase: VisitorPhase;\n\t};\n\twarnUnexpectedStructure(this: Context & Visitor, message: string): void;\n\ttraverseWithState(this: Context & Visitor, state: VisitorPhase, path: NodePath): void;\n}\n\nfunction makeVisitor(\n\tmagicImport: string,\n\tcurrentModule: string,\n\tlogger: AstroIntegrationLogger\n): Visitor {\n\treturn {\n\t\tstate: {\n\t\t\tfoundNames: [],\n\t\t\tphase: VisitorPhase.Initializing,\n\t\t},\n\t\twarnUnexpectedStructure(message) {\n\t\t\tlogger.warn(`Detected Astro module with unexpected structure. Module \"${currentModule}\" ${message}.\nPlease send a report on https://github.com/Fryuni/inox-tools/issues/new with the module for reproduction`);\n\t\t},\n\t\ttraverseWithState(state: VisitorPhase, path: NodePath) {\n\t\t\tconst prevState = this.state.phase;\n\t\t\tthis.state.phase = state;\n\t\t\ttry {\n\t\t\t\treturn this.traverse(path);\n\t\t\t} finally {\n\t\t\t\tthis.state.phase = prevState;\n\t\t\t}\n\t\t},\n\t\tvisitImportDeclaration(path) {\n\t\t\t// Imports that come after the initialization are not relevant\n\t\t\tif (this.state.phase !== VisitorPhase.Initializing) return false;\n\n\t\t\tif (path.node.source.type === 'StringLiteral' && path.node.source.value === magicImport) {\n\t\t\t\tconst defaultSpecifier = path.node.specifiers?.find(\n\t\t\t\t\t(specifier) => specifier.type === 'ImportDefaultSpecifier'\n\t\t\t\t);\n\t\t\t\tconst defaultImport = defaultSpecifier?.local?.name?.toString();\n\t\t\t\tif (defaultImport) {\n\t\t\t\t\tthis.state.foundNames.push(defaultImport);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this.traverse(path);\n\t\t},\n\t\tvisitVariableDeclaration(path) {\n\t\t\tif (this.state.astroNode === undefined && path.node.kind === 'const') {\n\t\t\t\tconst declaration = path.node.declarations.find(\n\t\t\t\t\t(decl) =>\n\t\t\t\t\t\t(decl.type === 'VariableDeclarator' &&\n\t\t\t\t\t\t\tdecl.id.type === 'Identifier' &&\n\t\t\t\t\t\t\tdecl.id.name === 'Astro') ||\n\t\t\t\t\t\t(decl.type === 'VariableDeclarator' &&\n\t\t\t\t\t\t\tdecl.init?.type === 'CallExpression' &&\n\t\t\t\t\t\t\tdecl.init.callee.type === 'Identifier' &&\n\t\t\t\t\t\t\tdecl.init.callee.name === '$$createComponent')\n\t\t\t\t);\n\t\t\t\tif (declaration) {\n\t\t\t\t\tif (this.state.foundNames.length === 0) {\n\t\t\t\t\t\tthis.state.phase = VisitorPhase.Cancelled;\n\t\t\t\t\t\tthis.abort();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthis.state.astroNode = path;\n\t\t\t\t\tthis.state.phase = VisitorPhase.Initialized;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.traverse(path);\n\t\t},\n\t\tvisitCallExpression(path) {\n\t\t\tif (path.node.callee.type !== 'Identifier') {\n\t\t\t\tthis.traverse(path);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (path.node.callee.name === '$$createComponent') {\n\t\t\t\tswitch (this.state.phase) {\n\t\t\t\t\tcase VisitorPhase.Initializing:\n\t\t\t\t\tcase VisitorPhase.Initialized:\n\t\t\t\t\t\tthis.traverseWithState(VisitorPhase.HoistingCalls, path);\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase VisitorPhase.Cancelled:\n\t\t\t\t\t\tassert.fail('Hoisting continued after abortion.');\n\t\t\t\t\tcase VisitorPhase.HoistingCalls:\n\t\t\t\t\t\tthis.warnUnexpectedStructure('has nested $$createComponent declarations');\n\t\t\t\t\t\treturn false;\n\t\t\t\t\tcase VisitorPhase.EnrichingCallsInPlace:\n\t\t\t\t\tcase VisitorPhase.DroppingCalls:\n\t\t\t\t\t\tthis.warnUnexpectedStructure('has more than one $$createComponent declarations');\n\t\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.state.foundNames.includes(path.node.callee.name)) {\n\t\t\t\tswitch (this.state.phase) {\n\t\t\t\t\tcase VisitorPhase.HoistingCalls:\n\t\t\t\t\tcase VisitorPhase.EnrichingCallsInPlace:\n\t\t\t\t\tcase VisitorPhase.Initialized: {\n\t\t\t\t\t\tpath\n\t\t\t\t\t\t\t.get('arguments')\n\t\t\t\t\t\t\t.insertAt(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tb.objectExpression([\n\t\t\t\t\t\t\t\t\tb.objectProperty(\n\t\t\t\t\t\t\t\t\t\tb.identifier('bundleFile'),\n\t\t\t\t\t\t\t\t\t\tb.memberExpression(\n\t\t\t\t\t\t\t\t\t\t\tb.memberExpression(b.identifier('import'), b.identifier('meta')),\n\t\t\t\t\t\t\t\t\t\t\tb.identifier('url')\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\tb.objectProperty(b.identifier('sourceFile'), b.stringLiteral(currentModule)),\n\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\tthis.traverseWithState(VisitorPhase.EnrichingCallsInPlace, path);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tcase VisitorPhase.DroppingCalls: {\n\t\t\t\t\t\treturn b.unaryExpression('void', b.numericLiteral(0));\n\t\t\t\t\t}\n\t\t\t\t\tdefault: {\n\t\t\t\t\t\tassert.fail('Unexpected phase for call expression');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t}\n\n\t\t\tthis.traverse(path);\n\t\t},\n\t\tvisitFunctionDeclaration(path) {\n\t\t\tswitch (this.state.phase) {\n\t\t\t\tcase VisitorPhase.HoistingCalls:\n\t\t\t\t\tthis.traverseWithState(VisitorPhase.DroppingCalls, path);\n\t\t\t\t\tbreak;\n\t\t\t\tcase VisitorPhase.Initializing:\n\t\t\t\t\tthis.state.phase = VisitorPhase.Initialized;\n\t\t\t\tdefault:\n\t\t\t\t\tthis.traverse(path);\n\t\t\t}\n\t\t},\n\t\tvisitExpressionStatement(path) {\n\t\t\tthis.traverse(path);\n\n\t\t\tif (this.state.phase !== VisitorPhase.HoistingCalls) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet expression = path.node.expression;\n\n\t\t\tif (expression.type === 'AwaitExpression' && expression.argument?.type === 'CallExpression') {\n\t\t\t\texpression = expression.argument;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\texpression.type === 'CallExpression' &&\n\t\t\t\texpression.callee.type === 'Identifier' &&\n\t\t\t\tthis.state.foundNames.includes(expression.callee.name)\n\t\t\t) {\n\t\t\t\t// Hoist it\n\t\t\t\tthis.state.astroNode!.insertBefore(b.expressionStatement(b.awaitExpression(expression)));\n\t\t\t\t// Remove original\n\t\t\t\tpath.replace();\n\t\t\t}\n\t\t},\n\t};\n}\n","import debugC from 'debug';\n\nexport const debug = debugC('inox-tools:aik-route-config');\n","import type { HookParameters, RouteData } from 'astro';\nimport * as path from 'node:path';\nimport { Once } from '@inox-tools/utils/once';\nimport { defineIntegration, addIntegration, addVitePlugin } from 'astro-integration-kit';\nimport { fileURLToPath } from 'node:url';\nimport { normalizePath } from 'vite';\nimport { inspect } from 'node:util';\nimport { debug } from './debug.js';\n\nexport type ConfigContext = {\n\troute: string[];\n\trouteData: RouteData[];\n\tcomponent: string;\n};\n\nexport type InnerContext = {\n\tbundleFile: string;\n\tsourceFile: string;\n};\n\nexport function convertContext(context: InnerContext): ConfigContext | null {\n\treturn componentToContextMapping.get(context.sourceFile) ?? null;\n}\n\nconst componentToChunkMapping = new Map<string, string>();\nconst componentToContextMapping = new Map<string, ConfigContext>();\n\nconst integration = defineIntegration({\n\tname: '@inox-tools/aik-route-config/context-resolution',\n\tsetup: () => {\n\t\tlet root!: URL;\n\n\t\treturn {\n\t\t\thooks: {\n\t\t\t\t'astro:config:setup': (params) => {\n\t\t\t\t\tconst { config } = params;\n\t\t\t\t\troot = config.root;\n\n\t\t\t\t\taddVitePlugin(params, {\n\t\t\t\t\t\tplugin: {\n\t\t\t\t\t\t\tname: '@inox-tools/aik-route-config/context-resolution',\n\t\t\t\t\t\t\tasync writeBundle(outputOptions, bundle) {\n\t\t\t\t\t\t\t\tconst basePath = outputOptions.dir!;\n\n\t\t\t\t\t\t\t\tfor (const chunk of Object.values(bundle)) {\n\t\t\t\t\t\t\t\t\tif (chunk.type !== 'chunk') continue;\n\n\t\t\t\t\t\t\t\t\tconst fileName = path.join(basePath, chunk.fileName);\n\n\t\t\t\t\t\t\t\t\tfor (const id of chunk.moduleIds) {\n\t\t\t\t\t\t\t\t\t\tif (id.endsWith('.astro')) {\n\t\t\t\t\t\t\t\t\t\t\tcomponentToChunkMapping.set(id, fileName);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\t'astro:build:setup': ({ pages, target }) => {\n\t\t\t\t\tif (target !== 'server') return;\n\n\t\t\t\t\tfor (const { route } of pages.values()) {\n\t\t\t\t\t\tconst fullComponentPath = normalizePath(fileURLToPath(new URL(route.component, root)));\n\t\t\t\t\t\tconst context = componentToContextMapping.get(fullComponentPath);\n\n\t\t\t\t\t\tif (context) {\n\t\t\t\t\t\t\tcontext.route.push(route.route);\n\t\t\t\t\t\t\tcontext.routeData.push(route);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcomponentToContextMapping.set(fullComponentPath, {\n\t\t\t\t\t\t\t\troute: [route.route],\n\t\t\t\t\t\t\t\trouteData: [route],\n\t\t\t\t\t\t\t\tcomponent: route.component,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'astro:build:ssr': async ({ logger, manifest: { routes } }) => {\n\t\t\t\t\tconst ssrComponents = routes\n\t\t\t\t\t\t.map((r) => r.routeData)\n\t\t\t\t\t\t.filter((r) => r.type === 'page')\n\t\t\t\t\t\t.map((r) => r.component)\n\t\t\t\t\t\t.map((c) => fileURLToPath(new URL(c, root)))\n\t\t\t\t\t\t.map((c) => componentToChunkMapping.get(c))\n\t\t\t\t\t\t.filter((m) => !!m);\n\n\t\t\t\t\t// Import SSR components so the hoisted logic gets executed\n\t\t\t\t\tfor (const module of ssrComponents) {\n\t\t\t\t\t\tawait import(/* @vite-ignore */ module!).catch((error) => {\n\t\t\t\t\t\t\tlogger.error(`Failed to import SSR component: ${module!} ${inspect(error)}`);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\t},\n});\n\nconst integrateOnce = new Once();\n\ntype IntegrateParams = HookParameters<'astro:config:setup'>;\n\nexport function integrate(params: IntegrateParams) {\n\tintegrateOnce.do(() => {\n\t\tdebug('Injecting route-config integration');\n\t\taddIntegration(params, {\n\t\t\tintegration: integration(),\n\t\t\tensureUnique: true,\n\t\t});\n\t});\n}\n","import { definePlugin, addVitePlugin } from 'astro-integration-kit';\nimport { hoistGlobalPlugin } from './hoistGlobalPlugin.js';\nimport { integrate, convertContext } from './contextResolution.js';\nimport type { ConfigContext, InnerContext } from './contextResolution.js';\nimport { debug } from './debug.js';\n\ntype ConfigHandler<T> = (context: ConfigContext, value: T) => Promise<void> | void;\n\ntype InnerHandler<T> = (context: InnerContext, value: T) => Promise<void>;\n\ntype PerRouteConfigOptions<T> = {\n\timportName: string;\n\tcallbackHandler: ConfigHandler<T>;\n};\n\nconst GLOBAL_HANDLERS_SYMBOL = Symbol.for('@inox-tools/aik-route-config');\n\nconst globalHandlers: Map<string, InnerHandler<any>> = ((globalThis as any)[\n\tGLOBAL_HANDLERS_SYMBOL\n] ??= new Map());\n\nexport default definePlugin({\n\tname: 'defineRouteConfig',\n\tsetup: () => {\n\t\treturn {\n\t\t\t'astro:config:setup': (params) => ({\n\t\t\t\tdefineRouteConfig: <T = any>(options: PerRouteConfigOptions<T>): void => {\n\t\t\t\t\tconst { logger, command } = params;\n\n\t\t\t\t\tintegrate(params);\n\n\t\t\t\t\tconst innerHandler: InnerHandler<T> = async (context, value) => {\n\t\t\t\t\t\t// Do nothing while running dev or preview server\n\t\t\t\t\t\tif (command !== 'build') return;\n\n\t\t\t\t\t\tdebug(`Loading route config from ${context.sourceFile} from ${options.importName}`);\n\n\t\t\t\t\t\tconst outerContext = convertContext(context);\n\t\t\t\t\t\tif (outerContext) {\n\t\t\t\t\t\t\tawait options.callbackHandler(outerContext, value);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlogger.warn(\n\t\t\t\t\t\t\t\t`Trying to set a route config for a file that is not a page: ${context.sourceFile}`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\tglobalHandlers.set(options.importName, innerHandler);\n\n\t\t\t\t\taddVitePlugin(params, {\n\t\t\t\t\t\tplugin: hoistGlobalPlugin({\n\t\t\t\t\t\t\tconfigImport: options.importName,\n\t\t\t\t\t\t\tlogger,\n\t\t\t\t\t\t}),\n\t\t\t\t\t\twarnDuplicated: true,\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t}),\n\t\t};\n\t},\n});\n"]}