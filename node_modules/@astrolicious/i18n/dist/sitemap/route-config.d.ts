import * as sitemap from 'sitemap';
import { z } from 'astro/zod';

declare const callbackSchema: z.ZodDefault<z.ZodOptional<z.ZodUnion<[z.ZodLiteral<false>, z.ZodIntersection<z.ZodObject<{
    dynamicParams: z.ZodOptional<z.ZodUnion<[z.ZodRecord<z.ZodString, z.ZodRecord<z.ZodString, z.ZodOptional<z.ZodString>>>, z.ZodArray<z.ZodObject<{
        locale: z.ZodString;
        params: z.ZodRecord<z.ZodString, z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        params: Record<string, string>;
        locale: string;
    }, {
        params: Record<string, string>;
        locale: string;
    }>, "many">]>>;
}, "strip", z.ZodTypeAny, {
    dynamicParams?: Record<string, Record<string, string | undefined>> | {
        params: Record<string, string>;
        locale: string;
    }[] | undefined;
}, {
    dynamicParams?: Record<string, Record<string, string | undefined>> | {
        params: Record<string, string>;
        locale: string;
    }[] | undefined;
}>, z.ZodObject<{
    changefreq: z.ZodOptional<z.ZodOptional<z.ZodNativeEnum<typeof sitemap.EnumChangefreq>>>;
    lastmod: z.ZodOptional<z.ZodOptional<z.ZodDate>>;
    priority: z.ZodOptional<z.ZodOptional<z.ZodNumber>>;
}, "strip", z.ZodTypeAny, {
    changefreq?: sitemap.EnumChangefreq | undefined;
    lastmod?: Date | undefined;
    priority?: number | undefined;
}, {
    changefreq?: sitemap.EnumChangefreq | undefined;
    lastmod?: Date | undefined;
    priority?: number | undefined;
}>>]>>>;
type CallbackSchema = z.infer<typeof callbackSchema>;

export { type CallbackSchema, callbackSchema };
